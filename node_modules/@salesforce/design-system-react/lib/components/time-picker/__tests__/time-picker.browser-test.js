"use strict";

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _testUtils = _interopRequireDefault(require("react-dom/test-utils"));

var _chai = require("chai");

var _lodash = _interopRequireDefault(require("lodash.assign"));

var _timePicker = _interopRequireDefault(require("../../time-picker"));

var _iconSettings = _interopRequireDefault(require("../../icon-settings"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Simulate = _testUtils.default.Simulate,
    findRenderedDOMComponentWithTag = _testUtils.default.findRenderedDOMComponentWithTag,
    findRenderedDOMComponentWithClass = _testUtils.default.findRenderedDOMComponentWithClass;
var mockCallback = sinon.spy();

var formatter = function formatter(date) {
  return date.toLocaleTimeString('en-US', {
    hour: '2-digit',
    minute: '2-digit'
  });
};

var dateTimeNow = new Date();
var defaultStrValue = formatter(dateTimeNow);
var defaultProps = {
  onDateChange: function onDateChange() {},
  value: dateTimeNow,
  strValue: defaultStrValue
};
describe('SLDSTimepicker: ', function () {
  describe('Timepicker Value Prop Change', function () {
    it('displays a modified state upon changing props', function () {
      var _temp;

      var futureDateTime = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);
      var TestTimepicker = (0, _react.createFactory)((_temp =
      /*#__PURE__*/
      function (_React$Component) {
        _inherits(_temp, _React$Component);

        function _temp() {
          var _getPrototypeOf2;

          var _this;

          _classCallCheck(this, _temp);

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_temp)).call.apply(_getPrototypeOf2, [this].concat(args)));

          _defineProperty(_assertThisInitialized(_this), "state", {
            isOpen: false,
            value: futureDateTime,
            strValue: formatter(futureDateTime)
          });

          return _this;
        }

        _createClass(_temp, [{
          key: "render",
          value: function render() {
            return _react.default.createElement(_iconSettings.default, {
              iconPath: "/assets/icons"
            }, _react.default.createElement(_timePicker.default, _extends({
              ref: "timePicker"
            }, defaultProps)));
          }
        }]);

        return _temp;
      }(_react.default.Component), _temp));

      var parent = _testUtils.default.renderIntoDocument(TestTimepicker());

      parent.refs.timePicker.state.strValue.should.eql(defaultStrValue);
    });
  });
});