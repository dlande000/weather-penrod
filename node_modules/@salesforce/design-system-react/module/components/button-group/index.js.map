{"version":3,"sources":["../../../.tmp-es/components/button-group/index.jsx"],"names":["React","PropTypes","classNames","assign","BUTTON_GROUP","propTypes","children","node","isRequired","className","oneOfType","array","object","string","labels","shape","error","label","variant","oneOf","defaultProps","ButtonGroup","props","zeroIndexLength","Children","count","map","child","index","newChild","cloneElement","triggerClassName","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Button Group design pattern](https://lightningdesignsystem.com/components/button-groups/) in React.\n// Based on SLDS v2.1.1\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport assign from 'lodash.assign';\n\nimport { BUTTON_GROUP } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * Children are expected to be components. If last button triggers a dropdown menu, use Dropdown instead of Button. _Tested with snapshot testing._\n\t */\n\tchildren: PropTypes.node.isRequired,\n\t/**\n\t * CSS classes added to `slds-button-group` or `slds-checkbox_button-group` tag\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `error`: Message to display when any of Checkboxes are in an error state. _Tested with snapshot testing._\n\t * * `label`: This label appears above the button group. _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\terror: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * Use checkbox variant for \"Checkbox Button Group\" styling and add Checkbox components as children _Tested with snapshot testing._\n\t */\n\tvariant: PropTypes.oneOf(['checkbox']),\n};\n\nconst defaultProps = { labels: {} };\n\n/**\n * The ButtonGroup component wraps other components (ie. Button, MenuDropdown, PopoverTooltip, Checkboxes, etc).\n */\nconst ButtonGroup = (props) => {\n\t// Merge objects of strings with their default object\n\tconst labels = props\n\t\t? assign({}, defaultProps.labels, props.labels)\n\t\t: defaultProps.labels;\n\n\tlet children = props.children;\n\tconst zeroIndexLength = React.Children.count(props.children) - 1;\n\n\tif (zeroIndexLength > 0) {\n\t\tchildren = React.Children.map(props.children, (child, index) => {\n\t\t\tlet newChild;\n\t\t\tif (index === zeroIndexLength) {\n\t\t\t\tnewChild = React.cloneElement(child, {\n\t\t\t\t\ttriggerClassName: 'slds-button_last',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn newChild || child;\n\t\t});\n\t}\n\n\tif (props.variant === 'checkbox') {\n\t\tchildren = React.Children.map(props.children, (child) =>\n\t\t\tReact.cloneElement(child, {\n\t\t\t\tvariant: 'button-group',\n\t\t\t})\n\t\t);\n\t}\n\n\tif (props.variant === 'checkbox') {\n\t\treturn (\n\t\t\t<fieldset\n\t\t\t\tclassName={classNames('slds-form-element', {\n\t\t\t\t\t'slds-has-error': labels.error,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<legend className=\"slds-form-element__legend slds-form-element__label\">\n\t\t\t\t\t{props.labels.label}\n\t\t\t\t</legend>\n\t\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-checkbox_button-group',\n\t\t\t\t\t\t\tprops.className\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</div>\n\t\t\t\t\t{labels.error ? (\n\t\t\t\t\t\t<div className=\"slds-form-element__help\">{labels.error}</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t);\n\t}\n\t// default\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames('slds-button-group', props.className)}\n\t\t\trole=\"group\"\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nButtonGroup.displayName = BUTTON_GROUP;\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\n\nexport default ButtonGroup;\n"],"file":"index.js"}