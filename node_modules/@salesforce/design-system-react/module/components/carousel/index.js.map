{"version":3,"sources":["../../../.tmp-es/components/carousel/index.jsx"],"names":["React","PropTypes","classnames","shortid","CAROUSEL","canUseDOM","canUseEventListeners","CarouselIndicators","PreviousNextCarouselNavigator","CarouselItem","AutoplayButton","KEYS","EventUtil","checkProps","componentDoc","defaultProps","assistiveText","autoplayButton","nextPanel","previousPanel","autoplayInterval","hasAutoplay","hasPreviousNextPanelNavigation","isInfinite","itemsPerPanel","Carousel","props","event","next","getCurrentPanel","nrOfPanels","setCurrentPanel","changeTranslationAutomatically","prev","setState","indicatorsHaveFocus","panel","getIsAutoplayOn","stopAutoplay","isAutoplayOn","onRequestAutoplayToggle","actionToTake","startAutoplay","stageItem","undefined","current","offsetWidth","stageWidth","amount","cb","translateX","onRequestPanelChange","currentPanel","requestedPanel","autoplayId","setInterval","canGoToNext","onNextPanelHandler","ignoreCallbacksAndStateUpdates","clearInterval","setTranslationAmount","state","keyDownCallbacks","LEFT","canGoToPrevious","onPreviousPanelHandler","RIGHT","keyCode","trapImmediate","Math","ceil","items","length","createRef","generatedId","generate","window","addEventListener","setDimensions","mountAutoplayEvent","prevProps","updateAutoplayEvent","removeEventListener","unmountAutoplayEvent","id","isPreviousBtnDisabled","isNextBtnDisabled","itemWidth","className","handleKeyDown","onAutoplayBtnClick","marginLeft","marginRight","left","transform","map","item","index","onItemClick","onRenderItem","right","onIndicatorBlur","onIndicatorClickHandler","onIndicatorFocus","Component","object","number","oneOfType","array","string","bool","isRequired","func"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Carousel Component\n\n// Implements the [Carousel design pattern](https://www.lightningdesignsystem.com/components/carousel/) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport { CAROUSEL } from '../../utilities/constants';\n\nimport {\n\tcanUseDOM,\n\tcanUseEventListeners,\n} from '../../utilities/execution-environment';\n\nimport CarouselIndicators from './private/carousel-indicators';\nimport PreviousNextCarouselNavigator from './private/previous-next-carousel-navigator';\nimport CarouselItem from './private/carousel-item';\nimport AutoplayButton from './private/auto-play-button';\n\n// ### Event Helpers\nimport KEYS from '../../utilities/key-code';\nimport EventUtil from '../../utilities/event';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './docs.json';\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n// ### Default Props\nconst defaultProps = {\n\tassistiveText: {\n\t\tautoplayButton: 'Start / Stop auto-play',\n\t\tnextPanel: 'Next Panel',\n\t\tpreviousPanel: 'Previous Panel',\n\t},\n\tautoplayInterval: 4000,\n\thasAutoplay: false,\n\thasPreviousNextPanelNavigation: false,\n\tisInfinite: false,\n\titemsPerPanel: 1,\n};\n\n/**\n * A carousel allows multiple pieces of featured content to occupy an allocated amount of space.\n * Currently panel index and auto play cannot be controlled by the app.\n */\nclass Carousel extends React.Component {\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tstatic displayName = CAROUSEL;\n\n\t// ### Prop Types\n\tstatic propTypes = {\n\t\t/**\n\t\t * Description of the carousel items for screen-readers.\n\t\t */\n\t\tassistiveText: PropTypes.object,\n\t\t/**\n\t\t * Interval for the autoplay iteration\n\t\t */\n\t\tautoplayInterval: PropTypes.number,\n\t\t/**\n\t\t * CSS classes that are applied to the main 'slds-carousel' classed component container\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Dictates the currently active/visible carousel panel. Use with `onRequestPanelChange` for a controlled carousel component. If not provided, the carousel will manage this itself via state.\n\t\t */\n\t\tcurrentPanel: PropTypes.number,\n\t\t/**\n\t\t * Boolean showing whether the autoplay button is available or not\n\t\t */\n\t\thasAutoplay: PropTypes.bool,\n\t\t/**\n\t\t * Boolean for displaying the navigation indicators (left/right arrows) of the carousel\n\t\t */\n\t\thasPreviousNextPanelNavigation: PropTypes.bool,\n\t\t/**\n\t\t * Id of component, if desired. If not provided an id is automatically generated\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Boolean that dictates whether autoplay is active or not. Use with `onRequestAutoplayToggle` for a controlled carousel component.\n\t\t */\n\t\tisAutoplayOn: PropTypes.bool,\n\t\t/**\n\t\t * Boolean for infinite loop navigation. Note: if not true autoplay will stop automatically at the last panel.\n\t\t */\n\t\tisInfinite: PropTypes.bool,\n\t\t/**\n\t\t * * **Array of item objects used by the default carousel item renderer.**\n\t\t * Each object can contain:\n\t\t * * `id`: The id of the carousel item. [REQUIRED]\n\t\t * * `heading`: Primary string that will be used as the heading\n\t\t * * `description`: Secondary string that is used to describe the item\n\t\t * * `buttonLabel`: If assigned a call to button action will be rendered with this text, if unassigned no button is rendered\n\t\t * * `imageAssistiveText`: Image alt text, if not present heading will be used instead\n\t\t * * `href`: Used for item link, if not provided 'javascript:void(0);' is used instead\n\t\t * * `src`: Item image src value\n\t\t */\n\t\titems: PropTypes.array.isRequired,\n\t\t/**\n\t\t * Number of items to be displayed at a time in the carousel\n\t\t */\n\t\titemsPerPanel: PropTypes.number,\n\t\t/**\n\t\t * Accepts a custom carousel item rendering function\n\t\t */\n\t\tonRenderItem: PropTypes.func,\n\t\t/**\n\t\t * Called whenever `isAutoplayOn` is requested to be toggled on or off. Use with `isAutoplayOn` prop for a controlled carousel component. Passes an event object and a data object with the current `isAutoplayOn` value as an attribute.\n\t\t */\n\t\tonRequestAutoplayToggle: PropTypes.func,\n\t\t/**\n\t\t * Called whenever the panel is requested to change due to user interaction or auto-play. Use with `currentPanel` for a controlled carousel component. Passes an event object and a data object with `currentPanel` and `requestedPanel` attributes.\n\t\t */\n\t\tonRequestPanelChange: PropTypes.func,\n\t\t/**\n\t\t * Handler for clicking on a carousel item\n\t\t */\n\t\tonItemClick: PropTypes.func,\n\t};\n\n\t// ### Default Props\n\tstatic defaultProps = defaultProps;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.nrOfPanels = Math.ceil(props.items.length / props.itemsPerPanel);\n\t\tthis.stageItem = React.createRef();\n\n\t\tthis.state = {\n\t\t\tcurrentPanel: props.currentPanel !== undefined ? props.currentPanel : 0,\n\t\t\tindicatorsHaveFocus: false,\n\t\t\tisAutoplayOn:\n\t\t\t\tprops.isAutoplayOn !== undefined\n\t\t\t\t\t? props.isAutoplayOn\n\t\t\t\t\t: props.hasAutoplay,\n\t\t\tstageWidth: 0,\n\t\t\ttranslateX: -1000000,\n\t\t};\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.generatedId = shortid.generate();\n\t\tcheckProps(CAROUSEL, componentDoc);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (\n\t\t\tcanUseDOM &&\n\t\t\tthis.stageItem !== undefined &&\n\t\t\tthis.stageItem.current !== undefined &&\n\t\t\tthis.stageItem.current.offsetWidth !== undefined\n\t\t) {\n\t\t\tthis.stageWidth = this.stageItem.current.offsetWidth;\n\t\t}\n\n\t\tif (canUseEventListeners) {\n\t\t\twindow.addEventListener('resize', this.setDimensions, false);\n\t\t}\n\n\t\tthis.changeTranslationAutomatically();\n\n\t\tif (this.getIsAutoplayOn()) {\n\t\t\tthis.startAutoplay({ mountAutoplayEvent: true });\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (\n\t\t\tthis.props.currentPanel !== undefined &&\n\t\t\tprevProps.currentPanel !== this.props.currentPanel\n\t\t) {\n\t\t\tthis.changeTranslationAutomatically();\n\t\t}\n\t\tif (\n\t\t\tthis.props.isAutoplayOn !== undefined &&\n\t\t\tprevProps.isAutoplayOn !== this.props.isAutoplayOn\n\t\t) {\n\t\t\tif (this.props.isAutoplayOn) {\n\t\t\t\tthis.startAutoplay({ updateAutoplayEvent: true });\n\t\t\t} else {\n\t\t\t\tthis.stopAutoplay({ updateAutoplayEvent: true }, true);\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tprevProps.items.length !== this.props.items.length ||\n\t\t\tprevProps.itemsPerPanel !== this.props.itemsPerPanel\n\t\t) {\n\t\t\tthis.nrOfPanels = Math.ceil(\n\t\t\t\tthis.props.items.length / this.props.itemsPerPanel\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (canUseEventListeners) {\n\t\t\twindow.removeEventListener('resize', this.setDimensions, false);\n\t\t}\n\t\tthis.stopAutoplay({ unmountAutoplayEvent: true }, true);\n\t}\n\n\tonNextPanelHandler = (event) => {\n\t\tlet next = this.getCurrentPanel() + 1;\n\t\tif (next > this.nrOfPanels - 1) {\n\t\t\tnext = 0;\n\t\t}\n\t\tthis.setCurrentPanel(event, next, this.changeTranslationAutomatically);\n\t};\n\n\tonPreviousPanelHandler = (event) => {\n\t\tlet prev = this.getCurrentPanel() - 1;\n\t\tif (prev < 0) {\n\t\t\tprev = this.nrOfPanels - 1;\n\t\t}\n\t\tthis.setCurrentPanel(event, prev, this.changeTranslationAutomatically);\n\t};\n\n\tonIndicatorBlur = () => {\n\t\tthis.setState({ indicatorsHaveFocus: false });\n\t};\n\n\tonIndicatorClickHandler = (event, panel) => {\n\t\tthis.setCurrentPanel(event, panel, this.changeTranslationAutomatically);\n\t\tthis.setState({ indicatorsHaveFocus: true });\n\t\tif (this.getIsAutoplayOn()) {\n\t\t\tthis.stopAutoplay(event);\n\t\t}\n\t};\n\n\tonIndicatorFocus = (event) => {\n\t\tthis.setState({ indicatorsHaveFocus: true });\n\t\tif (this.getIsAutoplayOn()) {\n\t\t\tthis.stopAutoplay(event);\n\t\t}\n\t};\n\n\tonAutoplayBtnClick = (event) => {\n\t\tconst isAutoplayOn = this.getIsAutoplayOn();\n\n\t\tif (this.props.onRequestAutoplayToggle) {\n\t\t\tthis.props.onRequestAutoplayToggle(event, { isAutoplayOn });\n\t\t} else {\n\t\t\tconst actionToTake = isAutoplayOn\n\t\t\t\t? this.stopAutoplay\n\t\t\t\t: this.startAutoplay;\n\n\t\t\tthis.setState({\n\t\t\t\tisAutoplayOn: !isAutoplayOn,\n\t\t\t});\n\t\t\tactionToTake(event);\n\t\t}\n\t};\n\n\tgetCurrentPanel() {\n\t\treturn this.props.currentPanel !== undefined\n\t\t\t? this.props.currentPanel\n\t\t\t: this.state.currentPanel;\n\t}\n\n\tgetIsAutoplayOn() {\n\t\treturn this.props.isAutoplayOn !== undefined\n\t\t\t? this.props.isAutoplayOn\n\t\t\t: this.state.isAutoplayOn;\n\t}\n\n\tsetDimensions = () => {\n\t\tif (\n\t\t\tcanUseDOM &&\n\t\t\tthis.stageItem !== undefined &&\n\t\t\tthis.stageItem.current !== undefined &&\n\t\t\tthis.stageItem.current.offsetWidth !== undefined\n\t\t) {\n\t\t\tthis.setState(\n\t\t\t\t{ stageWidth: this.stageItem.current.offsetWidth },\n\t\t\t\tthis.changeTranslationAutomatically\n\t\t\t);\n\t\t}\n\t};\n\n\tsetTranslationAmount = (amount, cb) => {\n\t\tthis.setState({ translateX: amount }, cb);\n\t};\n\n\tsetCurrentPanel = (event, amount, cb) => {\n\t\tif (this.props.onRequestPanelChange) {\n\t\t\tthis.props.onRequestPanelChange(event, {\n\t\t\t\tcurrentPanel: this.getCurrentPanel(),\n\t\t\t\trequestedPanel: amount,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({ currentPanel: amount }, cb);\n\t\t}\n\t};\n\n\tstartAutoplay = (event) => {\n\t\tthis.autoplayId = setInterval(() => {\n\t\t\tif (this.canGoToNext()) {\n\t\t\t\tthis.onNextPanelHandler(event);\n\t\t\t} else if (this.props.isInfinite) {\n\t\t\t\tthis.setCurrentPanel(event, 0, this.changeTranslationAutomatically);\n\t\t\t} else {\n\t\t\t\tthis.stopAutoplay(event);\n\t\t\t}\n\t\t}, this.props.autoplayInterval);\n\t};\n\n\tstopAutoplay = (event, ignoreCallbacksAndStateUpdates) => {\n\t\tif (this.autoplayId) {\n\t\t\tclearInterval(this.autoplayId);\n\t\t}\n\n\t\tif (!ignoreCallbacksAndStateUpdates) {\n\t\t\tif (this.props.onRequestAutoplayToggle) {\n\t\t\t\tthis.props.onRequestAutoplayToggle(event, {\n\t\t\t\t\tisAutoplayOn: this.getIsAutoplayOn(),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({ isAutoplayOn: false });\n\t\t\t}\n\t\t}\n\t};\n\n\tchangeTranslationAutomatically = () => {\n\t\tthis.setTranslationAmount(\n\t\t\t-((this.state.stageWidth || this.stageWidth) * this.getCurrentPanel())\n\t\t);\n\t};\n\n\tcanGoToNext = () => this.getCurrentPanel() < this.nrOfPanels - 1;\n\n\tcanGoToPrevious = () => this.getCurrentPanel() > 0;\n\n\thandleKeyDown = (event) => {\n\t\tconst keyDownCallbacks = {\n\t\t\t[KEYS.LEFT]: () => {\n\t\t\t\tif (this.props.isInfinite || this.canGoToPrevious()) {\n\t\t\t\t\tthis.onPreviousPanelHandler(event);\n\t\t\t\t\tthis.setState({ indicatorsHaveFocus: true });\n\t\t\t\t\tif (this.getIsAutoplayOn()) {\n\t\t\t\t\t\tthis.stopAutoplay(event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t[KEYS.RIGHT]: () => {\n\t\t\t\tif (this.props.isInfinite || this.canGoToNext()) {\n\t\t\t\t\tthis.onNextPanelHandler(event);\n\t\t\t\t\tthis.setState({ indicatorsHaveFocus: true });\n\t\t\t\t\tif (this.getIsAutoplayOn()) {\n\t\t\t\t\t\tthis.stopAutoplay(event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\n\t\tif (keyDownCallbacks[event.keyCode]) {\n\t\t\tEventUtil.trapImmediate(event);\n\t\t\tkeyDownCallbacks[event.keyCode]();\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\thasAutoplay,\n\t\t\thasPreviousNextPanelNavigation,\n\t\t\tisInfinite,\n\t\t} = this.props;\n\t\tconst currentPanel = this.getCurrentPanel();\n\t\tconst id = this.props.id || this.generatedId;\n\t\tconst isPreviousBtnDisabled = !(isInfinite || this.canGoToPrevious());\n\t\tconst isNextBtnDisabled = !(isInfinite || this.canGoToNext());\n\t\tconst itemWidth =\n\t\t\t(this.state.stageWidth || this.stageWidth) / this.props.itemsPerPanel;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classnames('slds-carousel', this.props.className)}\n\t\t\t\tid={id}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t>\n\t\t\t\t<div className=\"slds-grid_vertical slds-col slds-path__scroller\">\n\t\t\t\t\t{hasAutoplay && (\n\t\t\t\t\t\t<AutoplayButton\n\t\t\t\t\t\t\tassistiveText={this.props.assistiveText.autoplayButton}\n\t\t\t\t\t\t\tisAutoplayOn={this.getIsAutoplayOn()}\n\t\t\t\t\t\t\tonClick={this.onAutoplayBtnClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"slds-is-relative\"\n\t\t\t\t\t\tstyle={{ marginLeft: '60px', marginRight: '60px' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{hasPreviousNextPanelNavigation && (\n\t\t\t\t\t\t\t<PreviousNextCarouselNavigator\n\t\t\t\t\t\t\t\tassistiveText={this.props.assistiveText.previousPanel}\n\t\t\t\t\t\t\t\ticonName=\"chevronleft\"\n\t\t\t\t\t\t\t\tisDisabled={isPreviousBtnDisabled}\n\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\tif (this.getIsAutoplayOn()) {\n\t\t\t\t\t\t\t\t\t\tthis.stopAutoplay(event);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.onPreviousPanelHandler(event);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinlineStyle={{ left: '-38px' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={this.stageItem}\n\t\t\t\t\t\t\tclassName=\"slds-carousel__stage slds-show\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"slds-carousel__panels slds-is-relative\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\ttransform: `translateX(${this.state.translateX}px)`,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.props.items.map((item, index) => (\n\t\t\t\t\t\t\t\t\t<CarouselItem\n\t\t\t\t\t\t\t\t\t\tcarouselId={id}\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.props.onItemClick(event, { item });\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonFocus={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tif (this.getIsAutoplayOn()) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.stopAutoplay(event);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonRenderItem={this.props.onRenderItem}\n\t\t\t\t\t\t\t\t\t\t{...item}\n\t\t\t\t\t\t\t\t\t\tisInCurrentPanel={\n\t\t\t\t\t\t\t\t\t\t\tindex >= currentPanel * this.props.itemsPerPanel &&\n\t\t\t\t\t\t\t\t\t\t\tindex <\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentPanel * this.props.itemsPerPanel +\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.itemsPerPanel\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\titemWidth={itemWidth}\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\tpanelIndex={\n\t\t\t\t\t\t\t\t\t\t\tMath.ceil((index + 1) / this.props.itemsPerPanel) - 1\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{hasPreviousNextPanelNavigation && (\n\t\t\t\t\t\t\t<PreviousNextCarouselNavigator\n\t\t\t\t\t\t\t\tassistiveText={this.props.assistiveText.nextPanel}\n\t\t\t\t\t\t\t\ticonName=\"chevronright\"\n\t\t\t\t\t\t\t\tisDisabled={isNextBtnDisabled}\n\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\tif (this.getIsAutoplayOn()) {\n\t\t\t\t\t\t\t\t\t\tthis.stopAutoplay(event);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.onNextPanelHandler(event);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinlineStyle={{ right: '-38px' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<CarouselIndicators\n\t\t\t\t\t\tnoOfIndicators={this.nrOfPanels}\n\t\t\t\t\t\tcarouselId={id}\n\t\t\t\t\t\tcurrentIndex={currentPanel}\n\t\t\t\t\t\thasFocus={this.state.indicatorsHaveFocus}\n\t\t\t\t\t\tonBlur={this.onIndicatorBlur}\n\t\t\t\t\t\tonClick={this.onIndicatorClickHandler}\n\t\t\t\t\t\tonFocus={this.onIndicatorFocus}\n\t\t\t\t\t\titems={this.props.items}\n\t\t\t\t\t\titemsPerPanel={this.props.itemsPerPanel}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Carousel;\n"],"file":"index.js"}