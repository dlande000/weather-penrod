{"version":3,"sources":["../../../../.tmp-es/components/carousel/private/carousel-item.jsx"],"names":["React","PropTypes","Button","CAROUSEL_ITEM","CarouselItem","props","carouselId","id","panelIndex","margin","maxWidth","itemWidth","padding","onRenderItem","item","href","onClick","onFocus","backgroundColor","width","isInCurrentPanel","src","imageAssistiveText","heading","height","minHeight","description","buttonLabel","displayName","propTypes","string","className","oneOfType","array","object","node","isRequired","number","bool","func","defaultProps"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # CarouselItem Component\n\n// Implements the [CarouselItem design pattern](https://www.lightningdesignsystem.com/components/carousel/) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../../button';\n\nimport { CAROUSEL_ITEM } from '../../../utilities/constants';\n\n/**\n * A carousel allows multiple pieces of featured content to occupy an allocated amount of space.\n */\nconst CarouselItem = (props) => (\n\t<div\n\t\tid={`content-id-${props.carouselId}-${props.id}`}\n\t\tclassName=\"slds-carousel__panel slds-m-horizontal_xx-small slds-list_horizontal\"\n\t\trole=\"tabpanel\"\n\t\taria-hidden=\"false\"\n\t\taria-labelledby={`indicator-id-${props.carouselId}-${props.panelIndex}`}\n\t\tstyle={{\n\t\t\tmargin: 0,\n\t\t\tmaxWidth: `${props.itemWidth}px`,\n\t\t\tpadding: '0 6px',\n\t\t}}\n\t>\n\t\t{props.onRenderItem ? (\n\t\t\tprops.onRenderItem({ item: props })\n\t\t) : (\n\t\t\t<a\n\t\t\t\tclassName=\"slds-carousel__panel-action slds-text-link_reset\"\n\t\t\t\thref={props.href}\n\t\t\t\tonClick={props.onClick}\n\t\t\t\tonFocus={props.onFocus}\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t}}\n\t\t\t\ttabIndex={props.isInCurrentPanel ? '0' : '-1'}\n\t\t\t>\n\t\t\t\t<div className=\"slds-carousel__image\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={props.src}\n\t\t\t\t\t\talt={props.imageAssistiveText || props.heading}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"slds-carousel__content\" style={{ height: 'auto' }}>\n\t\t\t\t\t<h2 className=\"slds-carousel__content-title\">{props.heading}</h2>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"slds-p-bottom_x-small slds-text-body_small\"\n\t\t\t\t\t\tstyle={{ minHeight: '40px' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.description}\n\t\t\t\t\t</div>\n\t\t\t\t\t{props.buttonLabel && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel={props.buttonLabel}\n\t\t\t\t\t\t\ttabIndex={props.isInCurrentPanel ? '0' : '-1'}\n\t\t\t\t\t\t\tvariant=\"neutral\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t)}\n\t</div>\n);\n\nCarouselItem.displayName = CAROUSEL_ITEM;\n\nCarouselItem.propTypes = {\n\t/**\n\t * Label of the button to be displayed. If not provided, no button will be rendered.\n\t */\n\tbuttonLabel: PropTypes.string,\n\t/**\n\t * Carousel HTML ID\n\t */\n\tcarouselId: PropTypes.string,\n\t/**\n\t * CSS classes that are applied to the component\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Visible paragraph text to be displayed on the carousel item\n\t */\n\tdescription: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t/**\n\t * Carousel Item's visible heading\n\t */\n\theading: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n\thref: PropTypes.string,\n\t/**\n\t * Id of the item component.\n\t */\n\tid: PropTypes.number.isRequired,\n\t/**\n\t * Image alt text\n\t */\n\timageAssistiveText: PropTypes.string,\n\t/**\n\t * Boolean indicating whether this item is currently visible in the active parent carousel panel\n\t */\n\tisInCurrentPanel: PropTypes.bool,\n\t/**\n\t * Width of the carousel item\n\t */\n\titemWidth: PropTypes.number,\n\t/**\n\t * Accepts a callback to handle when the a tag is focused on\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * Accepts a custom carousel item rendering function\n\t */\n\tonRenderItem: PropTypes.func,\n\t/**\n\t * Index of the panel this item belongs to, to be used when associating it to an indicator\n\t */\n\tpanelIndex: PropTypes.number,\n\t/**\n\t * Path of the image to be used\n\t */\n\tsrc: PropTypes.string.isRequired,\n};\n\nCarouselItem.defaultProps = {\n\thref: 'javascript:void(0);',\n};\n\nexport default CarouselItem;\n"],"file":"carousel-item.js"}