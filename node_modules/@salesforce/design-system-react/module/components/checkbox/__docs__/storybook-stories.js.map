{"version":3,"sources":["../../../../.tmp-es/components/checkbox/__docs__/storybook-stories.jsx"],"names":["React","storiesOf","action","IconSettings","CHECKBOX","Checkbox","Button","DefaultCheckbox","Error","SnapshotBase","SnapshotToggle","Toggle","CheckboxIndeterminate","indeterminate","checked","currentStateHelper","event","data","checkedLabel","setState","changeToIndeterminate","changeToCheck","changeToUnChecked","state","label","handleChange","Component","module","addDecorator","getStory","add","e","console","log","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport IconSettings from '../../icon-settings';\n\nimport { CHECKBOX } from '../../../utilities/constants';\nimport Checkbox from '../';\nimport Button from '../../button';\n\nimport DefaultCheckbox from '../__examples__/default';\nimport Error from '../__examples__/error';\nimport SnapshotBase from '../__examples__/snapshot-base';\nimport SnapshotToggle from '../__examples__/snapshot-toggle';\nimport Toggle from '../__examples__/toggle';\n\nclass CheckboxIndeterminate extends React.Component {\n\tstatic displayName = `${CHECKBOX}_INDETERMINATE`;\n\n\tstate = {\n\t\tindeterminate: true,\n\t\tchecked: true,\n\t\tcurrentStateHelper: 'Indeterminate',\n\t};\n\n\thandleChange = (checked, event, data) => {\n\t\tconst checkedLabel = data.checked ? 'Checked' : 'Unchecked';\n\t\tthis.setState({\n\t\t\tchecked: data.checked,\n\t\t\tcurrentStateHelper: data.indeterminate ? 'Indeterminate' : checkedLabel,\n\t\t\tindeterminate: data.indeterminate,\n\t\t});\n\n\t\taction('handleChange')(\n\t\t\tchecked,\n\t\t\tevent,\n\t\t\t`checked: ${data.checked},\n\t\t\tindeterminate: ${data.indeterminate}`\n\t\t);\n\t};\n\n\tchangeToIndeterminate = (event) => {\n\t\tthis.setState({\n\t\t\tcurrentStateHelper: 'Indeterminate',\n\t\t\tchecked: true,\n\t\t\tindeterminate: true,\n\t\t});\n\t\taction('changeToIndeterminate')(\n\t\t\tevent,\n\t\t\t'checked: true, indeterminate: true'\n\t\t);\n\t};\n\n\tchangeToCheck = (event) => {\n\t\tthis.setState({\n\t\t\tcurrentStateHelper: 'Checked',\n\t\t\tchecked: true,\n\t\t\tindeterminate: false,\n\t\t});\n\t\taction('changeToCheck')(event, 'checked: true, indeterminate: false');\n\t};\n\n\tchangeToUnChecked = (event) => {\n\t\tthis.setState({\n\t\t\tcurrentStateHelper: 'Unchecked',\n\t\t\tchecked: false,\n\t\t\tindeterminate: false,\n\t\t});\n\t\taction('changeToUnChecked')(event, 'checked: false, indeterminate: false');\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Button onClick={this.changeToIndeterminate} label=\"Indeterminate\" />\n\t\t\t\t<Button onClick={this.changeToCheck} label=\"Check\" />\n\t\t\t\t<Button onClick={this.changeToUnChecked} label=\"Uncheck\" />\n\t\t\t\t<p>\n\t\t\t\t\t<strong>Current State:</strong> {this.state.currentStateHelper}\n\t\t\t\t</p>\n\t\t\t\t<Checkbox\n\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\tlabel: 'Checkbox (indeterminate)',\n\t\t\t\t\t}}\n\t\t\t\t\tid=\"checkbox-example-standard-indeterminate\"\n\t\t\t\t\tlabel=\"Checkbox Label\"\n\t\t\t\t\tname=\"checkbox-example-standard-indeterminate\"\n\t\t\t\t\tchecked={this.state.checked}\n\t\t\t\t\tindeterminate={this.state.indeterminate}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<div className=\"slds-box slds-text-longform slds-m-top_large\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis example has an <em>indeterminate</em> checkbox.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIt is set by providing the <code>indeterminate</code> prop as{' '}\n\t\t\t\t\t\t<code>\n\t\t\t\t\t\t\t<strong>true</strong>\n\t\t\t\t\t\t</code>.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tOnce it is clicked, there is no way to make it go <em>back</em> to\n\t\t\t\t\t\tthe indeterminate state,{' '}\n\t\t\t\t\t\t<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:indeterminate#Checkbox_radio_button\">\n\t\t\t\t\t\t\tit must be done programatically, through JavaScript\n\t\t\t\t\t\t</a>.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nstoriesOf(CHECKBOX, module)\n\t.addDecorator((getStory) => (\n\t\t<div className=\"slds-p-around_medium\">\n\t\t\t<IconSettings iconPath=\"/assets/icons\">{getStory()}</IconSettings>\n\t\t</div>\n\t))\n\t.add('Checkbox (default, indeterminate, required, disabled', () => (\n\t\t<DefaultCheckbox />\n\t))\n\t.add('Checkbox (assistive text)', () => (\n\t\t<div>\n\t\t\t<Checkbox\n\t\t\t\tassistiveText={{\n\t\t\t\t\tlabel: `This is my checkbox.\n\t\t\t\t\t\t\tThere are many like it, but this one is mine.\n\t\t\t\t\t\t\tMy checkbox is my best friend.\n\t\t\t\t\t\t\tIt is my life.\n\t\t\t\t\t\t\tI must master it as I must master my life.\n\t\t\t\t\t\t\tWithout me, my checkbox is useless. Without my checkbox, I am useless.\n\t\t\t\t\t\t\tI must make my checkbox true.\n\t\t\t\t\t\t\tI must make it truer than my radio button who is trying to... `,\n\t\t\t\t}}\n\t\t\t\tid=\"checkbox-example-base-assistiveText\"\n\t\t\t\tlabel=\"Checkbox Label\"\n\t\t\t\tname=\"checkbox-example-base-assistiveText\"\n\t\t\t\tonChange={action('change')}\n\t\t\t/>\n\t\t\t<div className=\"slds-box slds-text-longform slds-m-top_large\">\n\t\t\t\t<p>\n\t\t\t\t\tThis example has assistive text. In Safari on Mac you can turn\n\t\t\t\t\tassistive text on by using the keyboard combination:\n\t\t\t\t\t<strong>Command + F5</strong>.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tOnce you have enabled it, use your tab key to focus on the checkbox\n\t\t\t\t\tinput, and the system should read you what is supplied to the checkbox\n\t\t\t\t\tas the <code>assistiveText</code>\n\t\t\t\t\tproperty.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t))\n\t.add('Checkbox (checked)', () => (\n\t\t<Checkbox\n\t\t\tchecked\n\t\t\tid=\"checkbox-example-base-checked\"\n\t\t\tlabel=\"Checkbox Label\"\n\t\t\tname=\"checkbox-example-base-checked\"\n\t\t\tonChange={action('change')}\n\t\t/>\n\t))\n\t.add('Checkbox (indeterminate)', () => <CheckboxIndeterminate />)\n\t.add('Checkbox Toggle', () => (\n\t\t<Checkbox\n\t\t\tid=\"checkbox-example-toggle\"\n\t\t\tlabel=\"Checkbox Toggle Label\"\n\t\t\tname=\"checkbox-example-toggle\"\n\t\t\tonChange={action('change')}\n\t\t\tonBlur={(e) => {\n\t\t\t\tconsole.log('bluring ', e.target);\n\t\t\t}}\n\t\t\tvariant=\"toggle\"\n\t\t/>\n\t))\n\t.add('Checkbox Toggle (with error)', () => (\n\t\t<Checkbox\n\t\t\tid=\"checkbox-example-toggle-error\"\n\t\t\tlabel=\"Checkbox Toggle Label\"\n\t\t\tname=\"checkbox-example-toggle-error\"\n\t\t\terrorText=\"This field has an error.\"\n\t\t\tonChange={action('change')}\n\t\t\tonBlur={(e) => {\n\t\t\t\tconsole.log('bluring ', e.target);\n\t\t\t}}\n\t\t\tvariant=\"toggle\"\n\t\t/>\n\t))\n\t.add('Checkbox Toggle (required)', () => (\n\t\t<Checkbox\n\t\t\tid=\"checkbox-example-toggle-required\"\n\t\t\tlabel=\"Checkbox Toggle Label\"\n\t\t\tname=\"checkbox-example-toggle-required\"\n\t\t\tonChange={action('change')}\n\t\t\tonBlur={(e) => {\n\t\t\t\tconsole.log('bluring ', e.target);\n\t\t\t}}\n\t\t\tvariant=\"toggle\"\n\t\t\trequired\n\t\t/>\n\t))\n\t.add('Checkbox Toggle (disabled)', () => (\n\t\t<Checkbox\n\t\t\tid=\"checkbox-example-toggle-disabled\"\n\t\t\tlabel=\"Checkbox Toggle Label\"\n\t\t\tname=\"checkbox-example-toggle-disabled\"\n\t\t\tonChange={action('change')}\n\t\t\tonBlur={(e) => {\n\t\t\t\tconsole.log('bluring ', e.target);\n\t\t\t}}\n\t\t\tvariant=\"toggle\"\n\t\t\tdisabled\n\t\t/>\n\t))\n\t.add('Checkbox Toggle (assistive text)', () => (\n\t\t<div>\n\t\t\t<Checkbox\n\t\t\t\tassistiveText={{\n\t\t\t\t\tlabel: `This is my checkbox.\n\t\t\t\t\t\t\tThere are many like it, but this one is mine.\n\t\t\t\t\t\t\tMy checkbox is my best friend.\n\t\t\t\t\t\t\tIt is my life.\n\t\t\t\t\t\t\tI must master it as I must master my life.\n\t\t\t\t\t\t\tWithout me, my checkbox is useless. Without my checkbox, I am useless.\n\t\t\t\t\t\t\tI must make my checkbox true.\n\t\t\t\t\t\t\tI must make it truer than my radio button who is trying to... `,\n\t\t\t\t}}\n\t\t\t\tid=\"checkbox-example-base-assistiveText\"\n\t\t\t\tlabel=\"Checkbox Label\"\n\t\t\t\tname=\"checkbox-example-base-assistiveText\"\n\t\t\t\tonChange={action('change')}\n\t\t\t\tvariant=\"toggle\"\n\t\t\t/>\n\t\t\t<div className=\"slds-box slds-text-longform slds-m-top_large\">\n\t\t\t\t<p>\n\t\t\t\t\tThis example has assistive text. In Safari on Mac you can turn\n\t\t\t\t\tassistive text on by using the keyboard combination:\n\t\t\t\t\t<strong>Command + F5</strong>.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tOnce you have enabled it, use your tab key to focus on the checkbox\n\t\t\t\t\tinput, and the system should read you what is supplied to the checkbox\n\t\t\t\t\tas the <code>assistiveText</code>\n\t\t\t\t\tproperty.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t))\n\t.add('Checkbox Toggle (checked)', () => (\n\t\t<Checkbox\n\t\t\tchecked\n\t\t\tid=\"checkbox-example-toggle-checked\"\n\t\t\tlabel=\"Checkbox Label\"\n\t\t\tname=\"checkbox-example-toggle-checked\"\n\t\t\tonChange={action('change')}\n\t\t\tvariant=\"toggle\"\n\t\t/>\n\t))\n\t.add('Doc site Error', () => <Error />)\n\t.add('Doc site Snapshot Base', () => <SnapshotBase />)\n\t.add('Doc site Snapshot Toggle', () => <SnapshotToggle />)\n\t.add('Doc site Toggle', () => <Toggle />);\n"],"file":"storybook-stories.js"}