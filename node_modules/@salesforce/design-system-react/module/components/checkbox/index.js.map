{"version":3,"sources":["../../../.tmp-es/components/checkbox/index.jsx"],"names":["React","PropTypes","classNames","shortid","KEYS","EventUtil","checkProps","componentDoc","CHECKBOX","propTypes","string","bool","assistiveText","shape","label","checked","defaultChecked","className","oneOfType","array","object","disabled","errorText","id","indeterminate","labels","toggleDisabled","toggleEnabled","name","onBlur","func","onChange","onFocus","onKeyDown","onKeyPress","onKeyUp","readOnly","required","role","variant","oneOf","defaultProps","Checkbox","props","generatedId","event","oldEventParameterOrder","target","keyCode","ENTER","SPACE","trapImmediate","handleChange","getId","component","input","generate","subRenders","base","renderBaseVariant","renderButtonGroupVariant","toggle","renderToggleVariant","variantExists","Component","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Checkbox Component\n\n// Implements the [Checkbox design pattern](https://www.lightningdesignsystem.com/components/forms/#checkbox) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// ### Event Helpers\nimport KEYS from '../../utilities/key-code';\nimport EventUtil from '../../utilities/event';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './docs.json';\n\nimport { CHECKBOX } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * An HTML ID that is shared with ARIA-supported devices with the\n\t * `aria-controls` attribute in order to relate the input with\n\t * another region of the page. An example would be a select box\n\t * that shows or hides a panel.\n\t */\n\t'aria-controls': PropTypes.string,\n\t/**\n\t * The `aria-describedby` attribute is used to indicate the IDs of the elements that describe the object. It is used to establish a relationship between widgets or groups and text that described them. This is very similar to aria-labelledby: a label describes the essence of an object, while a description provides more information that the user might need.\n\t */\n\t'aria-describedby': PropTypes.string,\n\t/**\n\t * `aria-owns` indicate that an element depends on the current one when the relation can't be determined by the hierarchy structure.\n\t */\n\t'aria-owns': PropTypes.string,\n\t/**\n\t * The `aria-required` attribute is used to indicate that user input is required on an element before a form can be submitted.\n\t */\n\t'aria-required': PropTypes.bool,\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: This is used as a visually hidden label if, no `labels.label` is provided.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * The Checkbox should be a controlled component, and will always be in the state specified. If checked is not defined, the state of the uncontrolled native `input` component will be used.\n\t */\n\tchecked: PropTypes.bool,\n\t/**\n\t * This is the initial value of an uncontrolled form element and is present only\n\t * to provide compatibility with hybrid framework applications that are not\n\t * entirely React. It should only be used in an application without centralized\n\t * state (Redux, Flux). \"Controlled components\" with centralized state is highly recommended. See [Code Overview](https://github.com/salesforce/design-system-react/blob/master/docs/codebase-overview.md#controlled-and-uncontrolled-components) for more information.\n\t */\n\tdefaultChecked: PropTypes.bool,\n\t/**\n\t * Class names to be added to the outer container of the Checkbox.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Disables the Checkbox and prevents clicking it.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Message to display when the Checkbox is in an error state. When this is present, also visually highlights the component as in error.\n\t */\n\terrorText: PropTypes.string,\n\t/**\n\t * A unique ID is needed in order to support keyboard navigation and ARIA support. This ID is added to the `input` element\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * The Checkbox will be indeterminate if its state can not be figured out or is partially checked. Once a checkbox is indeterminate, a click should cause it to be checked. Since a user cannot put a checkbox into an indeterminate state, it is assumed you are controlling the value of `checked` with the parent, also, and that this is a controlled component. **Note:** `indeterminate` proptype does nothing in the `toggle` variant, as [SLDS does not support it](https://lightningdesignsystem.com/components/forms/#flavor-checkbox-toggle-checkbox-toggle).\n\t */\n\tindeterminate: PropTypes.bool,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: Label for the _enabled_ state of the Toggle variant. Defaults to \"Enabled\".\n\t * * `toggleDisabled`: Label for the _disabled_ state of the Toggle variant. Defaults to \"Disabled\". Note that this uses SLDS language, and meaning, of \"Enabled\" and \"Disabled\"; referring to the state of whatever the checkbox is _toggling_, not whether the checkbox itself is enabled or disabled.\n\t * * `toggleEnabled`: Label for the _enabled_ state of the Toggle variant. Defaults to \"Enabled\".\n\t */\n\tlabels: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t\ttoggleDisabled: PropTypes.string,\n\t\ttoggleEnabled: PropTypes.string,\n\t}),\n\t/**\n\t * Name of the submitted form parameter.\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * This event fires when the Checkbox looses focus. It passes in `{ event }`.\n\t */\n\tonBlur: PropTypes.func,\n\t/**\n\t * This event fires when the Checkbox changes. Passes in `event, { checked }`. This used to be `checked, event, { checked }`.\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * This event fires when the Checkbox is focused. It passes in `{ event }`.\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * This event fires when a key is pressed down. It passes in `{ event }`.\n\t */\n\tonKeyDown: PropTypes.func,\n\t/**\n\t * This event fires when a character is typed. See [this article](http://www.bloggingdeveloper.com/post/KeyPress-KeyDown-KeyUp-The-Difference-Between-Javascript-Key-Events.aspx) for more information. It passes in `{ event }`.\n\t */\n\tonKeyPress: PropTypes.func,\n\t/**\n\t * This event fires when a pressed key is released. It passes in `{ event }`.\n\t */\n\tonKeyUp: PropTypes.func,\n\t/**\n\t * Displays the value of the input, but does not allow changes.\n\t */\n\treadOnly: PropTypes.bool,\n\t/**\n\t * Highlights the Checkbox as a required field (does not perform any validation).\n\t */\n\trequired: PropTypes.bool,\n\t/**\n\t * The aria-role of the checkbox.\n\t */\n\trole: PropTypes.string,\n\t/**\n\t * Which UX pattern of checkbox? The default is `base` while other option is `toggle`. (**Note:** `toggle` variant does not support the `indeterminate` feature, because [SLDS does not support it](https://lightningdesignsystem.com/components/forms/#flavor-checkbox-toggle-checkbox-toggle).)\n\t */\n\tvariant: PropTypes.oneOf(['base', 'toggle', 'button-group']),\n};\n\nconst defaultProps = {\n\tassistiveText: {},\n\tlabels: {\n\t\ttoggleDisabled: 'Disabled',\n\t\ttoggleEnabled: 'Enabled',\n\t},\n\tvariant: 'base',\n};\n\n/**\n * The ability to style checkboxes with CSS varies across browsers. Using this component ensures checkboxes look the same everywhere.\n */\nclass Checkbox extends React.Component {\n\tcomponentWillMount() {\n\t\tcheckProps(CHECKBOX, this.props, componentDoc);\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tgetId = () => this.props.id || this.generatedId;\n\n\thandleChange = (event) => {\n\t\tconst { checked, indeterminate, onChange } = this.props;\n\n\t\tif (typeof onChange === 'function') {\n\t\t\t// `target.checked` is present twice to maintain backwards compatibility. Please remove first parameter `value` on the next breaking change or when `forms/checkbox` is removed.\n\t\t\tif (this.props.oldEventParameterOrder) {\n\t\t\t\tonChange(event.target.checked, event, {\n\t\t\t\t\tchecked: indeterminate ? true : !checked,\n\t\t\t\t\tindeterminate: false,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// NEW API\n\t\t\t\tonChange(event, {\n\t\t\t\t\tchecked: indeterminate ? true : !checked,\n\t\t\t\t\tindeterminate: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\thandleKeyDown = (event) => {\n\t\tif (event.keyCode) {\n\t\t\tif (event.keyCode === KEYS.ENTER || event.keyCode === KEYS.SPACE) {\n\t\t\t\tEventUtil.trapImmediate(event);\n\t\t\t\tthis.handleChange(event);\n\t\t\t}\n\t\t}\n\t};\n\n\trenderButtonGroupVariant = (props, assistiveText, labels) => (\n\t\t<span className=\"slds-button slds-checkbox_button\">\n\t\t\t<input\n\t\t\t\taria-controls={this.props['aria-controls']}\n\t\t\t\taria-describedby={this.props['aria-describedby']}\n\t\t\t\taria-owns={this.props['aria-owns']}\n\t\t\t\taria-required={this.props['aria-required']}\n\t\t\t\tdisabled={props.disabled}\n\t\t\t\tchecked={props.checked}\n\t\t\t\tdefaultChecked={props.defaultChecked}\n\t\t\t\tid={this.getId()}\n\t\t\t\tname={props.name}\n\t\t\t\tonBlur={props.onBlur}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tonFocus={props.onFocus}\n\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\tref={(component) => {\n\t\t\t\t\tthis.input = component;\n\t\t\t\t}}\n\t\t\t\trole={props.role}\n\t\t\t\trequired={props.required}\n\t\t\t\ttype=\"checkbox\"\n\t\t\t/>\n\t\t\t<label className=\"slds-checkbox_button__label\" htmlFor={this.getId()}>\n\t\t\t\t<span className=\"slds-checkbox_faux\">{labels.label}</span>\n\t\t\t\t{assistiveText.label ? (\n\t\t\t\t\t<span className=\"slds-assistive-text\">{assistiveText.label}</span>\n\t\t\t\t) : null}\n\t\t\t</label>\n\t\t</span>\n\t);\n\n\trenderBaseVariant = (props, assistiveText, labels) => (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\t'slds-form-element',\n\t\t\t\t{\n\t\t\t\t\t'is-required': props.required,\n\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t},\n\t\t\t\tprops.className\n\t\t\t)}\n\t\t>\n\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t<span className=\"slds-checkbox\">\n\t\t\t\t\t{props.required ? (\n\t\t\t\t\t\t<abbr className=\"slds-required\" title=\"required\">\n\t\t\t\t\t\t\t*\n\t\t\t\t\t\t</abbr>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<input\n\t\t\t\t\t\taria-controls={this.props['aria-controls']}\n\t\t\t\t\t\taria-describedby={this.props['aria-describedby']}\n\t\t\t\t\t\taria-owns={this.props['aria-owns']}\n\t\t\t\t\t\taria-required={this.props['aria-required']}\n\t\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\t\tchecked={props.checked}\n\t\t\t\t\t\tdefaultChecked={props.defaultChecked}\n\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\tname={props.name}\n\t\t\t\t\t\tonBlur={props.onBlur}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonFocus={props.onFocus}\n\t\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\t\tref={(component) => {\n\t\t\t\t\t\t\tif (component) {\n\t\t\t\t\t\t\t\tcomponent.indeterminate = props.indeterminate;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.input = component;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trole={props.role}\n\t\t\t\t\t\trequired={props.required}\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t/>\n\t\t\t\t\t<label className=\"slds-checkbox__label\" htmlFor={this.getId()}>\n\t\t\t\t\t\t<span className=\"slds-checkbox_faux\" />\n\t\t\t\t\t\t{labels.label ? (\n\t\t\t\t\t\t\t<span className=\"slds-form-element__label\">{labels.label}</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{assistiveText.label ? (\n\t\t\t\t\t\t\t<span className=\"slds-assistive-text\">{assistiveText.label}</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</label>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t{props.errorText ? (\n\t\t\t\t<div className=\"slds-form-element__help\">{props.errorText}</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n\n\trenderToggleVariant = (props, assistiveText, labels) => (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\t'slds-form-element',\n\t\t\t\t{\n\t\t\t\t\t'is-required': props.required,\n\t\t\t\t\t'slds-has-error': props.errorText,\n\t\t\t\t},\n\t\t\t\tprops.className\n\t\t\t)}\n\t\t>\n\t\t\t<label className=\"slds-checkbox_toggle slds-grid\" htmlFor={this.getId()}>\n\t\t\t\t{props.required ? (\n\t\t\t\t\t<abbr className=\"slds-required\" title=\"required\">\n\t\t\t\t\t\t*\n\t\t\t\t\t</abbr>\n\t\t\t\t) : null}\n\t\t\t\t{labels.label ? (\n\t\t\t\t\t<span className=\"slds-form-element__label slds-m-bottom_none\">\n\t\t\t\t\t\t{labels.label}\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t\t{assistiveText.label ? (\n\t\t\t\t\t<span className=\"slds-assistive-text\">{assistiveText.label}</span>\n\t\t\t\t) : null}\n\t\t\t\t<input\n\t\t\t\t\taria-controls={this.props['aria-controls']}\n\t\t\t\t\taria-describedby={`${this.getId()}-desc`}\n\t\t\t\t\taria-owns={this.props['aria-owns']}\n\t\t\t\t\taria-required={this.props['aria-required']}\n\t\t\t\t\tdisabled={props.disabled}\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t\tchecked={props.checked}\n\t\t\t\t\tdefaultChecked={props.defaultChecked}\n\t\t\t\t\tname={props.name}\n\t\t\t\t\tonBlur={props.onBlur}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tonFocus={props.onFocus}\n\t\t\t\t\tonKeyDown={props.onKeyDown}\n\t\t\t\t\tonKeyPress={props.onKeyPress}\n\t\t\t\t\tonKeyUp={props.onKeyUp}\n\t\t\t\t\tref={(component) => {\n\t\t\t\t\t\tthis.input = component;\n\t\t\t\t\t}}\n\t\t\t\t\trole={props.role}\n\t\t\t\t\trequired={props.required}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t/>\n\t\t\t\t<span\n\t\t\t\t\tid={`${this.getId()}-desc`}\n\t\t\t\t\tclassName=\"slds-checkbox_faux_container\"\n\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-checkbox_faux\" />\n\t\t\t\t\t<span className=\"slds-checkbox_on\">{labels.toggleEnabled}</span>\n\t\t\t\t\t<span className=\"slds-checkbox_off\">{labels.toggleDisabled}</span>\n\t\t\t\t</span>\n\t\t\t</label>\n\t\t\t{props.errorText ? (\n\t\t\t\t<div className=\"slds-form-element__help\">{props.errorText}</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n\n\trender() {\n\t\tconst assistiveText = {\n\t\t\t...defaultProps.assistiveText,\n\t\t\t/* Remove backward compatibility at next breaking change */\n\t\t\t...(typeof this.props.assistiveText === 'string'\n\t\t\t\t? { label: this.props.assistiveText }\n\t\t\t\t: {}),\n\t\t\t...(typeof this.props.assistiveText === 'object'\n\t\t\t\t? this.props.assistiveText\n\t\t\t\t: {}),\n\t\t};\n\t\tconst labels = {\n\t\t\t...defaultProps.labels,\n\t\t\t/* Remove backward compatibility at next breaking change */\n\t\t\t...(this.props.label ? { label: this.props.label } : {}),\n\t\t\t...this.props.labels,\n\t\t};\n\n\t\tconst subRenders = {\n\t\t\tbase: this.renderBaseVariant,\n\t\t\t'button-group': this.renderButtonGroupVariant,\n\t\t\ttoggle: this.renderToggleVariant,\n\t\t};\n\t\tconst variantExists = subRenders[this.props.variant];\n\n\t\treturn variantExists\n\t\t\t? subRenders[this.props.variant](this.props, assistiveText, labels)\n\t\t\t: subRenders.base(this.props, assistiveText, labels);\n\t}\n}\n\nCheckbox.displayName = CHECKBOX;\nCheckbox.propTypes = propTypes;\nCheckbox.defaultProps = defaultProps;\n\nexport default Checkbox;\n"],"file":"index.js"}