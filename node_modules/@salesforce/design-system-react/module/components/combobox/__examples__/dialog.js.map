{"version":3,"sources":["../../../../.tmp-es/components/combobox/__examples__/dialog.jsx"],"names":["React","Checkbox","Combobox","IconSettings","Popover","languages","Example","props","options","inputValue","length","label","state","selection","checked","handleClose","bind","isChecked","checkedIndex","findIndex","el","target","value","push","id","valueIndex","splice","getInputString","setState","e","trigger","slice","popoverLabel","placeholder","map","language","i","getIsChecked","handleCheckboxChange","Component","displayName"],"mappings":"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","sourcesContent":["/* eslint-disable no-console, react/prop-types */\nimport React from 'react';\nimport Checkbox from '~/components/checkbox';\nimport Combobox from '~/components/combobox';\nimport IconSettings from '~/components/icon-settings';\nimport Popover from '~/components/popover';\n\nconst languages = ['English', 'German', 'Tobagonian Creole English', 'Spanish'];\n\nclass Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinputValue: 'Select an option',\n\t\t\tselection: [],\n\t\t\tchecked: [],\n\t\t};\n\t\tthis.handleClose = this.handleClose.bind(this);\n\t}\n\n\tgetIsChecked(label) {\n\t\tlet isChecked = false;\n\t\tconst checkedIndex = this.state.checked.findIndex(\n\t\t\t(el) => el.label === label\n\t\t);\n\t\tif (checkedIndex > -1) isChecked = true;\n\t\treturn isChecked;\n\t}\n\n\tgetInputString = (options) => {\n\t\tlet inputValue = '';\n\t\tif (options.length === 0) inputValue = 'Select an option';\n\t\telse if (options.length === 1) inputValue = `${options[0].label}`;\n\t\telse inputValue = `${options.length} options selected`;\n\t\treturn inputValue;\n\t};\n\n\thandleCheckboxChange(target, value) {\n\t\tconst checked = this.state.checked;\n\t\tif (target.checked) {\n\t\t\tchecked.push({\n\t\t\t\tid: target.id,\n\t\t\t\tlabel: value,\n\t\t\t});\n\t\t} else {\n\t\t\tconst valueIndex = checked.findIndex((el) => el.label === value);\n\t\t\tchecked.splice(valueIndex, 1);\n\t\t}\n\n\t\tconst inputValue = this.getInputString(checked);\n\t\tthis.setState({ inputValue, checked });\n\t}\n\n\thandleClose(e, { trigger }) {\n\t\tif (trigger === 'cancel') {\n\t\t\tconst inputValue = this.getInputString(this.state.selection);\n\t\t\tconst selection =\n\t\t\t\tthis.state.selection.length > 0 ? this.state.selection.slice(0) : [];\n\t\t\tthis.setState({\n\t\t\t\tchecked: selection,\n\t\t\t\tinputValue,\n\t\t\t});\n\t\t} else {\n\t\t\tconst checked =\n\t\t\t\tthis.state.checked.length > 0 ? this.state.checked.slice(0) : [];\n\t\t\tthis.setState({\n\t\t\t\tselection: checked,\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Combobox\n\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\tpopoverLabel: 'Language Options',\n\t\t\t\t\t}}\n\t\t\t\t\tid=\"combobox-dialog\"\n\t\t\t\t\terrorText={\n\t\t\t\t\t\tthis.state.selection.length > 2 || this.state.checked.length > 2\n\t\t\t\t\t\t\t? 'Only select 2 options.'\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t\tlabels={{\n\t\t\t\t\t\tlabel: 'Languages',\n\t\t\t\t\t\tplaceholder: this.state.inputValue,\n\t\t\t\t\t}}\n\t\t\t\t\tpopover={\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\tbody={\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<fieldset className=\"slds-form-element\">\n\t\t\t\t\t\t\t\t\t\t<legend className=\"slds-form-element__legend slds-form-element__label\">\n\t\t\t\t\t\t\t\t\t\t\tSelect up to 2\n\t\t\t\t\t\t\t\t\t\t</legend>\n\t\t\t\t\t\t\t\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t\t\t\t\t\t\t\t{languages.map((language, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={this.getIsChecked(language)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={`checkbox-${i}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`checkbox-${i + 1}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabels={{ label: language }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleCheckboxChange(e.target, language);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tselection={this.state.selection}\n\t\t\t\t\tvalue={this.state.inputValue}\n\t\t\t\t\tvariant=\"popover\"\n\t\t\t\t/>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nExample.displayName = 'ComboboxExample';\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"dialog.js"}