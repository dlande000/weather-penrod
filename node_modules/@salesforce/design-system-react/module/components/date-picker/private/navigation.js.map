{"version":3,"sources":["../../../../.tmp-es/components/date-picker/private/navigation.jsx"],"names":["React","PropTypes","YearPicklist","Button","DateUtil","DatepickerMonthNavigation","props","monthLabels","Date","initialDateForCalendarRender","getMonth","getFullYear","event","preventDefault","stopPropagation","onChangeMonth","undefined","addMonths","flex","icon","assistiveTextPreviousMonth","onPreviousMonthKeyDown","previousMonthClicked","component","previousMonthRef","id","getMonthLabel","getYearLabel","assistiveTextNextMonth","nextMonthClicked","handleYearSelect","relativeYearFrom","relativeYearTo","Component","string","isRequired","instanceOf","func","array","number"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\nimport YearPicklist from './year-picklist';\nimport Button from '../../button';\n\nimport DateUtil from '../../../utilities/date';\n\nclass DatepickerMonthNavigation extends React.Component {\n\tstatic displayName = 'SLDSDatepickerMonthNavigation';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Label for button to go to the next month\n\t\t */\n\t\tassistiveTextNextMonth: PropTypes.string.isRequired,\n\t\t/**\n\t\t * Label for button to go to the previous month\n\t\t */\n\t\tassistiveTextPreviousMonth: PropTypes.string.isRequired,\n\t\t/**\n\t\t * HTML id for component\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Date used to create calendar that is displayed. This is typically the initial day focused when using the keyboard navigation. Focus will be set to this date if available.\n\t\t */\n\t\tinitialDateForCalendarRender: PropTypes.instanceOf(Date).isRequired,\n\t\t/**\n\t\t * Displayed calendar has changed or re-rendered\n\t\t */\n\t\tonChangeMonth: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Names of the months\n\t\t */\n\t\tmonthLabels: PropTypes.array.isRequired,\n\t\t/**\n\t\t * For keyboard navigation. In order to trap focus within the dialog, the first DOM node with a tab index should be listened to.\n\t\t */\n\t\tonPreviousMonthKeyDown: PropTypes.func,\n\t\t/**\n\t\t * Callback that passes in the DOM reference of the `<button>` DOM node within this component. Primary use is to allow `focus` to be called. You should still test if the node exists, since rendering is asynchronous.\n\t\t */\n\t\tpreviousMonthRef: PropTypes.func.isRequired,\n\t\t/**\n\t\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 - 5 = 2012).\n\t\t */\n\t\trelativeYearFrom: PropTypes.number,\n\t\t/**\n\t\t * Offset of year from current year that can be selected in the year selection dropdown. (2017 + 5 = 2012).\n\t\t */\n\t\trelativeYearTo: PropTypes.number,\n\t};\n\n\tgetMonthLabel = () =>\n\t\tthis.props.monthLabels[\n\t\t\tnew Date(this.props.initialDateForCalendarRender).getMonth()\n\t\t];\n\n\tgetYearLabel = () =>\n\t\tnew Date(this.props.initialDateForCalendarRender).getFullYear();\n\n\thandleClick = (event) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t};\n\n\thandleYearSelect = (initialDateForCalendarRender) => {\n\t\tthis.props.onChangeMonth(undefined, initialDateForCalendarRender);\n\t};\n\n\tpreviousMonthClicked = () => {\n\t\tthis.props.onChangeMonth(\n\t\t\tundefined,\n\t\t\tDateUtil.addMonths(this.props.initialDateForCalendarRender, -1)\n\t\t);\n\t};\n\n\tnextMonthClicked = () => {\n\t\tthis.props.onChangeMonth(\n\t\t\tundefined,\n\t\t\tDateUtil.addMonths(this.props.initialDateForCalendarRender, 1)\n\t\t);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"slds-datepicker__filter slds-grid\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"slds-datepicker__filter_month slds-grid slds-grid_align-spread slds-grow\"\n\t\t\t\t\tstyle={{ flex: 1.75 }}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"slds-align-middle\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tassistiveText={{ icon: this.props.assistiveTextPreviousMonth }}\n\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\ticonName=\"left\"\n\t\t\t\t\t\t\ticonVariant=\"container\"\n\t\t\t\t\t\t\tonKeyDown={this.props.onPreviousMonthKeyDown}\n\t\t\t\t\t\t\tonClick={this.previousMonthClicked}\n\t\t\t\t\t\t\tbuttonRef={(component) => {\n\t\t\t\t\t\t\t\tthis.props.previousMonthRef(component);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2\n\t\t\t\t\t\tid={`${this.props.id}-month`}\n\t\t\t\t\t\tclassName=\"slds-align-middle\"\n\t\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\t\taria-atomic\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.getMonthLabel()}{' '}\n\t\t\t\t\t\t<span className=\"slds-assistive-text\">{this.getYearLabel()}</span>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<div className=\"slds-align-middle\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tassistiveText={{ icon: this.props.assistiveTextNextMonth }}\n\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\ticonName=\"right\"\n\t\t\t\t\t\t\ticonVariant=\"container\"\n\t\t\t\t\t\t\tonClick={this.nextMonthClicked}\n\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<YearPicklist\n\t\t\t\t\tid={this.props.id}\n\t\t\t\t\tinitialDateForCalendarRender={this.props.initialDateForCalendarRender}\n\t\t\t\t\tonChangeMonth={this.handleYearSelect}\n\t\t\t\t\trelativeYearFrom={this.props.relativeYearFrom}\n\t\t\t\t\trelativeYearTo={this.props.relativeYearTo}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DatepickerMonthNavigation;\n"],"file":"navigation.js"}