{"version":3,"sources":["../../../../.tmp-es/components/page-header/private/detail-block.jsx"],"names":["React","Component","PropTypes","classnames","Tooltip","displayName","propTypes","className","string","label","oneOfType","element","content","truncate","bool","flavor","defaultProps","DetailBlock","props","state","showTooltip","_renderFieldTruncation","prevProps","fieldContent","fieldContentRef","isTruncated","scrollWidth","offsetWidth","setState","classes","_getClassNames","renderLabel","type","labelClasses","renderContent","field","renderContentWithTooltip","display"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Tooltip from '../../tooltip';\n\nconst displayName = 'PageHeaderDetailRow';\nconst propTypes = {\n\t/**\n\t * Optional class name\n\t */\n\tclassName: PropTypes.string,\n\t/**\n\t * label\n\t */\n\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\t/**\n\t * The content property can be a string or a React element\n\t */\n\tcontent: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\t/**\n\t * Sets whether the fields truncate\n\t */\n\ttruncate: PropTypes.bool,\n\tflavor: PropTypes.string,\n};\n\nconst defaultProps = {\n\tlabel: '',\n\tcontent: '',\n};\n\nclass DetailBlock extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { showTooltip: false };\n\t}\n\n\tcomponentDidMount() {\n\t\tthis._renderFieldTruncation();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.content !== prevProps.content) {\n\t\t\tthis._renderFieldTruncation();\n\t\t}\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\t_getClassNames(className, flavor) {\n\t\treturn classnames('slds-page-header__detail-block', className, {\n\t\t\t[`slds-size_${flavor}`]: flavor,\n\t\t});\n\t}\n\n\t_renderFieldTruncation() {\n\t\tconst fieldContent = this.fieldContentRef;\n\t\tconst isTruncated =\n\t\t\tfieldContent && fieldContent.scrollWidth > fieldContent.offsetWidth;\n\t\tif (isTruncated) {\n\t\t\tthis.setState({ showTooltip: true });\n\t\t} else {\n\t\t\tthis.setState({ showTooltip: false });\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { className, content, flavor, label, truncate } = this.props;\n\n\t\tconst classes = this._getClassNames(className, flavor);\n\n\t\t/**\n\t\t * Render the label\n\t\t */\n\t\tconst renderLabel = () => {\n\t\t\tconst type = typeof label;\n\n\t\t\tif (type === 'string') {\n\t\t\t\tconst labelClasses = classnames('slds-text-title', {\n\t\t\t\t\t'slds-truncate': truncate,\n\t\t\t\t});\n\t\t\t\treturn (\n\t\t\t\t\t<p className={labelClasses} title={label}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</p>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn label;\n\t\t};\n\n\t\t/**\n\t\t * Render the content\n\t\t */\n\t\tconst renderContent = () => {\n\t\t\tconst type = typeof content;\n\t\t\tif (type === 'string') {\n\t\t\t\tconst labelClasses = classnames('slds-text-body_regular', {\n\t\t\t\t\t'slds-truncate': truncate,\n\t\t\t\t});\n\t\t\t\treturn (\n\t\t\t\t\t<p\n\t\t\t\t\t\tref={(field) => {\n\t\t\t\t\t\t\tthis.fieldContentRef = field;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={labelClasses}\n\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</p>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t/**\n\t\t * Render the content with a tooltip (for content that truncates)\n\t\t */\n\t\tconst renderContentWithTooltip = () => {\n\t\t\tconst labelClasses = classnames('slds-text-body_regular', {\n\t\t\t\t'slds-truncate': truncate,\n\t\t\t});\n\t\t\treturn (\n\t\t\t\t<Tooltip\n\t\t\t\t\talign=\"top\"\n\t\t\t\t\tcontent={content}\n\t\t\t\t\ttriggerStyle={{ display: 'inline' }}\n\t\t\t\t>\n\t\t\t\t\t<p tabIndex=\"0\" className={labelClasses}>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</p>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t};\n\n\t\treturn (\n\t\t\t<li className={classes}>\n\t\t\t\t{renderLabel()}\n\t\t\t\t{this.state.showTooltip ? renderContentWithTooltip() : renderContent()}\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nDetailBlock.displayName = displayName;\nDetailBlock.propTypes = propTypes;\nDetailBlock.defaultProps = defaultProps;\n\nexport default DetailBlock;\n"],"file":"detail-block.js"}