{"version":3,"sources":["../../../.tmp-es/components/progress-bar/index.jsx"],"names":["React","PropTypes","classNames","assign","shortid","PROGRESS_BAR","propTypes","id","string","className","oneOfType","array","object","labels","shape","label","node","complete","radius","oneOf","color","thickness","value","number","isRequired","defaultProps","ProgressBar","generatedId","generate","props","getId","getDescription","width","Component","displayName"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAEA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,IAAMC,SAAS,GAAG;AACjB;;;AAGAC,EAAAA,EAAE,EAAEN,SAAS,CAACO,MAJG;;AAKjB;;;AAGAC,EAAAA,SAAS,EAAER,SAAS,CAACS,SAAV,CAAoB,CAC9BT,SAAS,CAACU,KADoB,EAE9BV,SAAS,CAACW,MAFoB,EAG9BX,SAAS,CAACO,MAHoB,CAApB,CARM;;AAajB;;;AAGAK,EAAAA,MAAM,EAAEZ,SAAS,CAACa,KAAV,CAAgB;AACvBC,IAAAA,KAAK,EAAEd,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACO,MAAX,EAAmBP,SAAS,CAACe,IAA7B,CAApB,CADgB;AAEvBC,IAAAA,QAAQ,EAAEhB,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACO,MAAX,EAAmBP,SAAS,CAACe,IAA7B,CAApB;AAFa,GAAhB,CAhBS;;AAoBjB;;;AAGAE,EAAAA,MAAM,EAAEjB,SAAS,CAACkB,KAAV,CAAgB,CAAC,UAAD,CAAhB,CAvBS;;AAwBjB;;;AAGAC,EAAAA,KAAK,EAAEnB,SAAS,CAACkB,KAAV,CAAgB,CAAC,SAAD,CAAhB,CA3BU;;AA4BjB;;;AAGAE,EAAAA,SAAS,EAAEpB,SAAS,CAACkB,KAAV,CAAgB,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,EAA+B,OAA/B,CAAhB,CA/BM;;AAgCjB;;;AAGAG,EAAAA,KAAK,EAAErB,SAAS,CAACsB,MAAV,CAAiBC;AAnCP,CAAlB;AAsCA,IAAMC,YAAY,GAAG;AACpBZ,EAAAA,MAAM,EAAE;AACPI,IAAAA,QAAQ,EAAE;AADH;AADY,CAArB;AAMA;;;;IAGMS,W;;;;;;;;;;;;;yCACgB;AACpB,WAAKC,WAAL,GAAmBvB,OAAO,CAACwB,QAAR,EAAnB;AACA;AAED;;;;;;;4BAIQ;AACP,aAAO,KAAKC,KAAL,CAAWtB,EAAX,IAAiB,KAAKoB,WAA7B;AACA;AAED;;;;;;;yCAI2B;AAAA,UAAVd,MAAU,QAAVA,MAAU;;AAC1B,UAAI,KAAKgB,KAAL,CAAWhB,MAAX,CAAkBE,KAAtB,EAA6B;AAC5B,eACC;AACC,UAAA,SAAS,EAAC,wDADX;AAEC,UAAA,EAAE,EAAC;AAFJ,WAIC,kCAAOF,MAAM,CAACE,KAAd,CAJD,EAKC;AAAM,yBAAY;AAAlB,WACC,oCACE,KAAKc,KAAL,CAAWP,KADb,QACsBT,MAAM,CAACI,QAD7B,CADD,CALD,CADD;AAaA;;AACD,aAAO,EAAP;AACA;;;6BAEQ;AACR,UAAMJ,MAAM,GAAGV,MAAM,CAAC,EAAD,EAAKsB,YAAY,CAACZ,MAAlB,EAA0B,KAAKgB,KAAL,CAAWhB,MAArC,CAArB;AAEA,aACC;AAAK,QAAA,EAAE,EAAE,KAAKiB,KAAL;AAAT,SACE,KAAKC,cAAL,CAAoB;AAAElB,QAAAA,MAAM,EAANA;AAAF,OAApB,CADF,EAEC;AACC,QAAA,SAAS,EAAEX,UAAU,CACpB,mBADoB,EAEpB,KAAK2B,KAAL,CAAWX,MAAX,+BAAyC,KAAKW,KAAL,CAAWX,MAApD,IAA+D,IAF3C,EAGpB,KAAKW,KAAL,CAAWR,SAAX,+BACwB,KAAKQ,KAAL,CAAWR,SADnC,IAEG,IALiB,EAMpB,KAAKQ,KAAL,CAAWpB,SANS;AADtB,SAUC;AACC,QAAA,SAAS,EAAEP,UAAU,6BAEpB,KAAK2B,KAAL,CAAWT,KAAX,sCAC+B,KAAKS,KAAL,CAAWT,KAD1C,IAEG,IAJiB,CADtB;AAOC,QAAA,KAAK,EAAE;AACNY,UAAAA,KAAK,YAAK,KAAKH,KAAL,CAAWP,KAAhB;AADC;AAPR,SAWC;AAAM,QAAA,SAAS,EAAC;AAAhB,iCACe,KAAKO,KAAL,CAAWP,KAD1B,OAXD,CAVD,CAFD,CADD;AA+BA;;;;EAtEwBtB,KAAK,CAACiC,S;;AAyEhCP,WAAW,CAACQ,WAAZ,GAA0B7B,YAA1B;AACAqB,WAAW,CAACpB,SAAZ,GAAwBA,SAAxB;AACAoB,WAAW,CAACD,YAAZ,GAA2BA,YAA3B;AAEA,eAAeC,WAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Progress Bar design pattern](https://lightningdesignsystem.com/components/progress-ring/) in React.\n// Based on SLDS v2.4.5\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport assign from 'lodash.assign';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\nimport { PROGRESS_BAR } from '../../utilities/constants';\n\nconst propTypes = {\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * CSS classes to be added to tag with `.slds-progress-bar`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Label for the progress bar\n\t */\n\tlabels: PropTypes.shape({\n\t\tlabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\tcomplete: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t}),\n\t/**\n\t *  Set radius of progress bar\n\t */\n\tradius: PropTypes.oneOf(['circular']),\n\t/**\n\t *  Set fill of progress bar\n\t */\n\tcolor: PropTypes.oneOf(['success']),\n\t/**\n\t *  Set progress bar thickness\n\t */\n\tthickness: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\t/**\n\t * Percentage of progress completion, ranging [0, 100].\n\t */\n\tvalue: PropTypes.number.isRequired,\n};\n\nconst defaultProps = {\n\tlabels: {\n\t\tcomplete: 'Complete',\n\t},\n};\n\n/**\n * A progress bar component communicates to the user the progress of a particular process\n */\nclass ProgressBar extends React.Component {\n\tcomponentWillMount() {\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\t/**\n\t * ID as a string\n\t * @returns {string} id\n\t */\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\t/**\n\t * Enables Descriptive Progress Bar if label is provided\n\t * @returns {string} description\n\t */\n\tgetDescription({ labels }) {\n\t\tif (this.props.labels.label) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"slds-grid slds-grid_align-spread slds-p-bottom_x-small\"\n\t\t\t\t\tid=\"progress-bar-label-id-4\"\n\t\t\t\t>\n\t\t\t\t\t<span>{labels.label}</span>\n\t\t\t\t\t<span aria-hidden=\"true\">\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{this.props.value}% {labels.complete}\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn '';\n\t}\n\n\trender() {\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\n\t\treturn (\n\t\t\t<div id={this.getId()}>\n\t\t\t\t{this.getDescription({ labels })}\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-progress-bar',\n\t\t\t\t\t\tthis.props.radius ? `slds-progress-bar_${this.props.radius}` : null,\n\t\t\t\t\t\tthis.props.thickness\n\t\t\t\t\t\t\t? `slds-progress-bar_${this.props.thickness}`\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\tthis.props.className\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t`slds-progress-bar__value`,\n\t\t\t\t\t\t\tthis.props.color\n\t\t\t\t\t\t\t\t? `slds-progress-bar__value_${this.props.color}`\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: `${this.props.value}%`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t\tProgress: {`${this.props.value}%`}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nProgressBar.displayName = PROGRESS_BAR;\nProgressBar.propTypes = propTypes;\nProgressBar.defaultProps = defaultProps;\n\nexport default ProgressBar;\n"],"file":"index.js"}