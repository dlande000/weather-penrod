{"version":3,"sources":["../../../../.tmp-es/components/progress-indicator/__examples__/default.jsx"],"names":["React","IconSettings","ProgressIndicator","steps","id","label","assistiveText","Example","props","event","data","setState","completedSteps","slice","step","disabledSteps","length","selectedStep","state","padding","background","variant","undefined","handleStepEvent","Component","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,iBAAP,MAA8B,2CAA9B,C,CAAiE;;AAEjE,IAAMC,KAAK,GAAG,CACb;AACCC,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,KAAK,EAAE,kDAFR;AAGCC,EAAAA,aAAa,EAAE;AAHhB,CADa,EAMb;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CANa,EAOb;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAPa,EAQb;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CARa,EASb;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CATa,CAAd;AAYA;;;;IAGME,O;;;;;AACL,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,iFAAMA,KAAN;;AADkB,sEAUD,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAClC,YAAKC,QAAL,CAAc;AACbC,QAAAA,cAAc,EAAET,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAeH,IAAI,CAACI,IAAL,CAAUV,EAAzB,CADH;AAEbW,QAAAA,aAAa,EACZL,IAAI,CAACI,IAAL,CAAUV,EAAV,GAAeD,KAAK,CAACa,MAArB,GACGb,KAAK,CAACU,KAAN,CAAYH,IAAI,CAACI,IAAL,CAAUV,EAAV,GAAe,CAA3B,EAA8BD,KAAK,CAACa,MAApC,CADH,GAEG,EALS;AAMbC,QAAAA,YAAY,EAAEP,IAAI,CAACI;AANN,OAAd;AAQA,KAnBkB;;AAElB,UAAKI,KAAL,GAAa;AACZf,MAAAA,KAAK,EAALA,KADY;AAEZS,MAAAA,cAAc,EAAE,EAFJ;AAGZG,MAAAA,aAAa,EAAEZ,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAeV,KAAK,CAACa,MAArB,CAHH;AAIZC,MAAAA,YAAY,EAAEd,KAAK,CAAC,CAAD;AAJP,KAAb;AAFkB;AAQlB;;;;6BAaQ;AACR,aACC,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAC;AAAvB,SACC;AACC,QAAA,KAAK,EAAE;AACNgB,UAAAA,OAAO,EAAE,eADH;AAENC,UAAAA,UAAU,EACT,KAAKZ,KAAL,CAAWa,OAAX,KAAuB,OAAvB,GAAiC,oBAAjC,GAAwDC;AAHnD;AADR,SAOC,oBAAC,iBAAD;AACC,QAAA,EAAE,EAAC,4BADJ;AAEC,QAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWN,cAF5B;AAGC,QAAA,aAAa,EAAE,KAAKM,KAAL,CAAWH,aAH3B;AAIC,QAAA,WAAW,EAAE,KAAKQ,eAJnB;AAKC,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWf,KALnB;AAMC,QAAA,YAAY,EAAE,KAAKe,KAAL,CAAWD,YAN1B,CAOC;;AAPD,QAPD,CADD,CADD;AAqBA;;;;EA5CoBjB,KAAK,CAACwB,S;;AA+C5BjB,OAAO,CAACkB,WAAR,GAAsB,0BAAtB;AAEA,eAAelB,OAAf,C,CAAwB","sourcesContent":["import React from 'react';\nimport IconSettings from '~/components/icon-settings';\nimport ProgressIndicator from '~/components/progress-indicator'; // `~` is replaced with design-system-react at runtime\n\nconst steps = [\n\t{\n\t\tid: 0,\n\t\tlabel: <i>tooltip label #1</i>,\n\t\tassistiveText: 'This is custom text in the assistive text key',\n\t},\n\t{ id: 1, label: 'tooltip label #2' },\n\t{ id: 2, label: <strong>tooltip label #3</strong> },\n\t{ id: 3, label: 'tooltip label #4' },\n\t{ id: 4, label: 'tooltip label #5' },\n];\n\n/*\n * This example allows you to select the next step and only the next step. Typically, Progress Indicator should be paired with a modal and form errors should be explained outside of this component.\n */\nclass Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsteps,\n\t\t\tcompletedSteps: [],\n\t\t\tdisabledSteps: steps.slice(2, steps.length),\n\t\t\tselectedStep: steps[0],\n\t\t};\n\t}\n\n\thandleStepEvent = (event, data) => {\n\t\tthis.setState({\n\t\t\tcompletedSteps: steps.slice(0, data.step.id),\n\t\t\tdisabledSteps:\n\t\t\t\tdata.step.id < steps.length\n\t\t\t\t\t? steps.slice(data.step.id + 2, steps.length)\n\t\t\t\t\t: [],\n\t\t\tselectedStep: data.step,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpadding: '4rem 1rem 0px',\n\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\tthis.props.variant === 'modal' ? 'rgb(244, 246, 249)' : undefined,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<ProgressIndicator\n\t\t\t\t\t\tid=\"example-progress-indicator\"\n\t\t\t\t\t\tcompletedSteps={this.state.completedSteps}\n\t\t\t\t\t\tdisabledSteps={this.state.disabledSteps}\n\t\t\t\t\t\tonStepClick={this.handleStepEvent}\n\t\t\t\t\t\tsteps={this.state.steps}\n\t\t\t\t\t\tselectedStep={this.state.selectedStep}\n\t\t\t\t\t\t// tooltipIsOpenSteps={stepsBasic.slice(0, 2)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nExample.displayName = 'ProgressIndicatorDefault';\n\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"default.js"}