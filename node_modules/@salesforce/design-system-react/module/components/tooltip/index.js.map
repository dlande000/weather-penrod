{"version":3,"sources":["../../../.tmp-es/components/tooltip/index.jsx"],"names":["React","PropTypes","classNames","shortid","POPOVER_TOOLTIP","Dialog","Icon","Button","checkProps","componentDoc","displayName","propTypes","align","oneOf","isRequired","assistiveText","shape","tooltipTipLearnMoreIcon","string","triggerLearnMoreIcon","children","node","content","dialogClassName","oneOfType","array","object","hasStaticAlignment","bool","hoverCloseDelay","number","id","labels","learnMoreAfter","learnMoreBefore","isOpen","triggerClassName","position","triggerStyle","theme","variant","defaultProps","Tooltip","props","setState","isClosing","setTimeout","isUnmounting","state","component","trigger","triggerRendered","generatedId","generate","noChildrenProvided","Children","count","onClickTrigger","label","icon","map","child","i","cloneElement","key","getId","onBlur","handleMouseLeave","onFocus","handleMouseEnter","onMouseEnter","onMouseLeave","undefined","deprecatedWay","context","handleCancel","getTooltipTarget","getTooltipContent","target","containerStyles","display","saveTriggerRef","getContent","getTooltip","Component","contextTypes","iconPath"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,SAASC,eAAT,QAAgC,2BAAhC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,aAAzB,C,CAEA;AACA;;AACA,IAAMC,WAAW,GAAGN,eAApB;AAEA,IAAMO,SAAS,GAAG;AACjB;;;AAGAC,EAAAA,KAAK,EAAEX,SAAS,CAACY,KAAV,CAAgB,CACtB,KADsB,EAEtB,UAFsB,EAGtB,WAHsB,EAItB,OAJsB,EAKtB,WALsB,EAMtB,cANsB,EAOtB,QAPsB,EAQtB,aARsB,EAStB,cATsB,EAUtB,MAVsB,EAWtB,UAXsB,EAYtB,aAZsB,CAAhB,EAaJC,UAjBc;;AAkBjB;;;;;;AAMAC,EAAAA,aAAa,EAAEd,SAAS,CAACe,KAAV,CAAgB;AAC9BC,IAAAA,uBAAuB,EAAEhB,SAAS,CAACiB,MADL;AAE9BC,IAAAA,oBAAoB,EAAElB,SAAS,CAACiB;AAFF,GAAhB,CAxBE;;AA4BjB;;;AAGAE,EAAAA,QAAQ,EAAEnB,SAAS,CAACoB,IA/BH;;AAgCjB;;;AAGAC,EAAAA,OAAO,EAAErB,SAAS,CAACoB,IAAV,CAAeP,UAnCP;;AAoCjB;;;AAGAS,EAAAA,eAAe,EAAEtB,SAAS,CAACuB,SAAV,CAAoB,CACpCvB,SAAS,CAACwB,KAD0B,EAEpCxB,SAAS,CAACyB,MAF0B,EAGpCzB,SAAS,CAACiB,MAH0B,CAApB,CAvCA;;AA4CjB;;;AAGAS,EAAAA,kBAAkB,EAAE1B,SAAS,CAAC2B,IA/Cb;;AAgDjB;;;AAGAC,EAAAA,eAAe,EAAE5B,SAAS,CAAC6B,MAnDV;;AAoDjB;;;AAGAC,EAAAA,EAAE,EAAE9B,SAAS,CAACiB,MAvDG;;AAwDjB;;;;;;AAMAc,EAAAA,MAAM,EAAE/B,SAAS,CAACe,KAAV,CAAgB;AACvBiB,IAAAA,cAAc,EAAEhC,SAAS,CAACiB,MADH;AAEvBgB,IAAAA,eAAe,EAAEjC,SAAS,CAACiB;AAFJ,GAAhB,CA9DS;;AAkEjB;;;AAGAiB,EAAAA,MAAM,EAAElC,SAAS,CAAC2B,IArED;;AAsEjB;;;AAGAQ,EAAAA,gBAAgB,EAAEnC,SAAS,CAACuB,SAAV,CAAoB,CACrCvB,SAAS,CAACwB,KAD2B,EAErCxB,SAAS,CAACyB,MAF2B,EAGrCzB,SAAS,CAACiB,MAH2B,CAApB,CAzED;;AA8EjB;;;;;;AAMAmB,EAAAA,QAAQ,EAAEpC,SAAS,CAACY,KAAV,CAAgB,CACzB,UADyB,EAEzB,yBAFyB,EAGzB,UAHyB,CAAhB,CApFO;;AAyFjB;;;AAGAyB,EAAAA,YAAY,EAAErC,SAAS,CAACyB,MA5FP;;AA6FjB;;;AAGAa,EAAAA,KAAK,EAAEtC,SAAS,CAACY,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAhGU;;AAiGjB;;;AAGA2B,EAAAA,OAAO,EAAEvC,SAAS,CAACY,KAAV,CAAgB,CAAC,MAAD,EAAS,WAAT,CAAhB;AApGQ,CAAlB;AAuGA,IAAM4B,YAAY,GAAG;AACpB1B,EAAAA,aAAa,EAAE;AACdE,IAAAA,uBAAuB,EAAE,WADX;AAEdE,IAAAA,oBAAoB,EAAE;AAFR,GADK;AAKpBP,EAAAA,KAAK,EAAE,KALa;AAMpBU,EAAAA,OAAO,EAAE,4CANW;AAOpBU,EAAAA,MAAM,EAAE;AACPC,IAAAA,cAAc,EAAE,gBADT;AAEPC,IAAAA,eAAe,EAAE;AAFV,GAPY;AAWpBL,EAAAA,eAAe,EAAE,EAXG;AAYpBQ,EAAAA,QAAQ,EAAE,UAZU;AAapBE,EAAAA,KAAK,EAAE,MAba;AAcpBC,EAAAA,OAAO,EAAE;AAdW,CAArB;AAiBA;;;;IAGME,O;;;;;AACL,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,iFAAMA,KAAN;;AADkB,mEAsIJ,YAAM;AACpB,YAAKC,QAAL,CAAc;AACbT,QAAAA,MAAM,EAAE,KADK;AAEbU,QAAAA,SAAS,EAAE;AAFE,OAAd;AAIA,KA3IkB;;AAAA,uEA6IA,YAAM;AACxB,YAAKD,QAAL,CAAc;AACbT,QAAAA,MAAM,EAAE,IADK;AAEbU,QAAAA,SAAS,EAAE;AAFE,OAAd;AAIA,KAlJkB;;AAAA,uEAoJA,YAAM;AACxB,YAAKD,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;;AAEAC,MAAAA,UAAU,CAAC,YAAM;AAChB,YAAI,CAAC,MAAKC,YAAN,IAAsB,MAAKC,KAAL,CAAWH,SAArC,EAAgD;AAC/C,gBAAKD,QAAL,CAAc;AACbT,YAAAA,MAAM,EAAE,KADK;AAEbU,YAAAA,SAAS,EAAE;AAFE,WAAd;AAIA;AACD,OAPS,EAOP,MAAKF,KAAL,CAAWd,eAPJ,CAAV;AAQA,KA/JkB;;AAAA,qEAiKF,UAACoB,SAAD,EAAe;AAC/B,YAAKC,OAAL,GAAeD,SAAf,CAD+B,CAE/B;AACA;AACA;AACA;AACA;;AACA,UAAI,CAAC,MAAKD,KAAL,CAAWG,eAAhB,EAAiC;AAChC,cAAKP,QAAL,CAAc;AAAEO,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACA;AACD,KA3KkB;;AAGlB,UAAKH,KAAL,GAAa;AACZH,MAAAA,SAAS,EAAE,KADC;AAEZV,MAAAA,MAAM,EAAE;AAFI,KAAb;AAHkB;AAOlB;;;;yCAEoB;AACpB;AACA3B,MAAAA,UAAU,CAACJ,eAAD,EAAkB,KAAKuC,KAAvB,EAA8BlC,YAA9B,CAAV;AAEA,WAAK2C,WAAL,GAAmBjD,OAAO,CAACkD,QAAR,EAAnB;AACA;;;2CAEsB;AACtB,WAAKN,YAAL,GAAoB,IAApB;AACA;;;iCAEY;AAAA;;AACZ,UAAI3B,QAAJ;AACA,UAAMkC,kBAAkB,GAAGtD,KAAK,CAACuD,QAAN,CAAeC,KAAf,CAAqB,KAAKb,KAAL,CAAWvB,QAAhC,MAA8C,CAAzE;;AAEA,UAAIkC,kBAAkB,IAAI,KAAKX,KAAL,CAAWc,cAArC,EAAqD;AACpDrC,QAAAA,QAAQ,GAAG,CACV;AAAG,UAAA,IAAI,EAAC,oBAAR;AAA6B,UAAA,OAAO,EAAE,KAAKuB,KAAL,CAAWc;AAAjD,WACC,oBAAC,IAAD;AACC,UAAA,QAAQ,EAAC,SADV;AAEC,UAAA,IAAI,EAAC,MAFN;AAGC,UAAA,aAAa,EAAE;AACdC,YAAAA,KAAK,EAAE,KAAKf,KAAL,CAAW5B,aAAX,CAAyBI;AADlB,WAHhB;AAMC,UAAA,IAAI,EAAC;AANN,UADD,CADU,CAAX;AAYA,OAbD,MAaO,IAAImC,kBAAJ,EAAwB;AAC9BlC,QAAAA,QAAQ,GAAG,CACV,oBAAC,MAAD;AACC,+BADD;AAEC,UAAA,aAAa,EAAE;AACduC,YAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAW5B,aAAX,CAAyBI;AADjB,WAFhB;AAKC,UAAA,YAAY,EAAC,SALd;AAMC,UAAA,QAAQ,EAAC,MANV;AAOC,UAAA,OAAO,EAAC;AAPT,UADU,CAAX;AAWA,OAZM,MAYA;AACNC,QAAAA,QAAQ,GAAG,KAAKuB,KAAL,CAAWvB,QAAtB;AACA;;AAED,aAAOpB,KAAK,CAACuD,QAAN,CAAeK,GAAf,CAAmBxC,QAAnB,EAA6B,UAACyC,KAAD,EAAQC,CAAR;AAAA,eACnC9D,KAAK,CAAC+D,YAAN,CAAmBF,KAAnB,EAA0B;AACzBG,UAAAA,GAAG,EAAEF,CADoB;AACjB;AACR,8BAAoB,MAAI,CAACG,KAAL,EAFK;AAGzBC,UAAAA,MAAM,EAAE,MAAI,CAACC,gBAHY;AAIzBC,UAAAA,OAAO,EAAE,MAAI,CAACC,gBAJW;AAKzBC,UAAAA,YAAY,EAAE,MAAI,CAACD,gBALM;AAMzBE,UAAAA,YAAY,EAAE,MAAI,CAACJ;AANM,SAA1B,CADmC;AAAA,OAA7B,CAAP;AAUA;;;4BAEO;AACP,aAAO,KAAKxB,KAAL,CAAWZ,EAAX,IAAiB,KAAKqB,WAA7B;AACA;;;iCAEY;AAAA;;AACZ,UAAMjB,MAAM,GACX,KAAKQ,KAAL,CAAWR,MAAX,KAAsBqC,SAAtB,GAAkC,KAAKxB,KAAL,CAAWb,MAA7C,GAAsD,KAAKQ,KAAL,CAAWR,MADlE;AAEA,UAAMvB,KAAK,GAAG,KAAK+B,KAAL,CAAW/B,KAAzB,CAHY,CAKZ;;AACA,UAAM6D,aAAa,GAAG,KAAK9B,KAAL,CAAWH,OAAX,KAAuB,OAA7C;AAEA,aAAOL,MAAM,GACZ,oBAAC,MAAD;AACC,QAAA,aAAa,MADd;AAEC,QAAA,SAAS,MAFV;AAGC,QAAA,iBAAiB,EAAEjC,UAAU,CAC5B,cAD4B,EAE5B,sBAF4B,EAG5B;AACC,8BAAoB,KAAKyC,KAAL,CAAWJ,KAAX,KAAqB,OAArB,IAAgCkC;AADrD,SAH4B,EAM5B,KAAK9B,KAAL,CAAWpB,eANiB,CAH9B;AAWC,QAAA,KAAK,EAAEX,KAXR;AAYC,QAAA,OAAO,EAAE,KAAK8D,OAZf;AAaC,QAAA,kBAAkB,EAAE,KAAK/B,KAAL,CAAWhB,kBAbhC;AAcC,QAAA,OAAO,EAAE,KAAKgD,YAdf;AAeC,QAAA,sBAAsB,EAAE;AAAA,iBAAM,MAAI,CAACC,gBAAL,EAAN;AAAA,SAfzB;AAgBC,QAAA,QAAQ,EAAE,KAAKjC,KAAL,CAAWN,QAhBtB;AAiBC,QAAA,OAAO,EAAC,SAjBT;AAkBC,QAAA,cAAc,EAAE;AACfN,UAAAA,EAAE,EAAE,KAAKkC,KAAL;AADW;AAlBjB,SAsBE,KAAKY,iBAAL,EAtBF,CADY,GA0BZ,iCA1BD;AA4BA;;;wCAEmB;AACnB,aACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,KAAKlC,KAAL,CAAWrB,OADb,EAEE,KAAKqB,KAAL,CAAWH,OAAX,KAAuB,WAAvB,IAAsC,KAAKG,KAAL,CAAWc,cAAjD,GACA;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,uBAAY;AAAhD,SACE,KAAKd,KAAL,CAAWX,MAAX,CAAkBE,eADpB,EACqC,GADrC,EAEC,oBAAC,IAAD;AACC,QAAA,aAAa,EAAE;AACdwB,UAAAA,KAAK,EAAE,KAAKf,KAAL,CAAW5B,aAAX,CAAyBE;AADlB,SADhB;AAIC,QAAA,QAAQ,EAAC,SAJV;AAKC,QAAA,OAAO,MALR;AAMC,QAAA,IAAI,EAAC,MANN;AAOC,QAAA,IAAI,EAAC;AAPN,QAFD,EAUI,GAVJ,EAWE,KAAK0B,KAAL,CAAWX,MAAX,CAAkBC,cAXpB,EAWoC,GAXpC,CADA,GAcG,IAhBL,CADD;AAoBA;;;uCAEkB;AAClB,aAAO,KAAKU,KAAL,CAAWmC,MAAX,GAAoB,KAAKnC,KAAL,CAAWmC,MAA/B,GAAwC,KAAK5B,OAApD;AACA;;;6BAyCQ;AACR,UAAM6B,eAAe;AACpBC,QAAAA,OAAO,EAAE;AADW,SAEjB,KAAKrC,KAAL,CAAWL,YAFM,CAArB;;AAKA,aACC;AACC,QAAA,SAAS,EAAEpC,UAAU,CACpB,sBADoB,EAEpB,KAAKyC,KAAL,CAAWP,gBAFS,CADtB;AAKC,QAAA,KAAK,EAAE2C,eALR;AAMC,QAAA,GAAG,EAAE,KAAKE;AANX,SAQE,KAAKC,UAAL,EARF,EASE,KAAKC,UAAL,EATF,CADD;AAaA;;;;EAjMoBnF,KAAK,CAACoF,S;;AAoM5B1C,OAAO,CAAC2C,YAAR,GAAuB;AACtBC,EAAAA,QAAQ,EAAErF,SAAS,CAACiB;AADE,CAAvB;AAIAwB,OAAO,CAAChC,WAAR,GAAsBA,WAAtB;AACAgC,OAAO,CAAC/B,SAAR,GAAoBA,SAApB;AACA+B,OAAO,CAACD,YAAR,GAAuBA,YAAvB;AAEA,eAAeC,OAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Tooltip\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport { POPOVER_TOOLTIP } from '../../utilities/constants';\n\nimport Dialog from '../utilities/dialog';\nimport Icon from '../icon';\nimport Button from '../button';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './docs.json';\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nconst displayName = POPOVER_TOOLTIP;\n\nconst propTypes = {\n\t/**\n\t * Alignment of the Tooltip relative to the element that triggers it.\n\t */\n\talign: PropTypes.oneOf([\n\t\t'top',\n\t\t'top left',\n\t\t'top right',\n\t\t'right',\n\t\t'right top',\n\t\t'right bottom',\n\t\t'bottom',\n\t\t'bottom left',\n\t\t'bottom right',\n\t\t'left',\n\t\t'left top',\n\t\t'left bottom',\n\t]).isRequired,\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `tooltipTipLearnMoreIcon`: This text is inside the info icon within the tooltip content and exists to \"complete the sentence\" for assistive tech users.\n\t * * `triggerLearnMoreIcon`: This text is inside the info icon that triggers the tooltip in order to have text within the link.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\ttooltipTipLearnMoreIcon: PropTypes.string,\n\t\ttriggerLearnMoreIcon: PropTypes.string,\n\t}),\n\t/**\n\t * Pass the one element that triggers the Tooltip as a child. It must be an element with `tabIndex` or an element that already has a `tabIndex` set such as an anchor or a button, so that keyboard users can tab to it.\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * Content inside Tooltip.\n\t */\n\tcontent: PropTypes.node.isRequired,\n\t/**\n\t * CSS classes to be added to the popover dialog. That is the element with `.slds-popover` on it.\n\t */\n\tdialogClassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * By default, dialogs will flip their alignment (such as bottom to top) if they extend beyond a boundary element such as a scrolling parent or a window/viewpoint. `hasStaticAlignment` disables this behavior and allows this component to extend beyond boundary elements. _Not tested._\n\t */\n\thasStaticAlignment: PropTypes.bool,\n\t/**\n\t * Delay on Tooltip closing.\n\t */\n\thoverCloseDelay: PropTypes.number,\n\t/**\n\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the popover to the triggering element.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `learnMoreAfter`: This label appears in the tooltip after the info icon.\n\t * * `learnMoreBefore`: This label appears in the tooltip before the info icon.\n\t */\n\tlabels: PropTypes.shape({\n\t\tlearnMoreAfter: PropTypes.string,\n\t\tlearnMoreBefore: PropTypes.string,\n\t}),\n\t/**\n\t * Forces tooltip to be open. A value of `false` will disable any interaction with the tooltip.\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * CSS classes to be added to tag with `slds-tooltip-trigger`.\n\t */\n\ttriggerClassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Please select one of the following:\n\t * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n\t * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n\t * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n\t */\n\tposition: PropTypes.oneOf([\n\t\t'absolute',\n\t\t'overflowBoundaryElement',\n\t\t'relative',\n\t]),\n\t/**\n\t * Custom styles to be added to wrapping triggering `div`.\n\t */\n\ttriggerStyle: PropTypes.object,\n\t/**\n\t * Determines the theme of tooltip: for informative purpose (blue background) or warning purpose (red background). This used to be `variant`.\n\t */\n\ttheme: PropTypes.oneOf(['info', 'error']),\n\t/**\n\t * Determines the type of the tooltip.\n\t */\n\tvariant: PropTypes.oneOf(['base', 'learnMore']),\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\ttooltipTipLearnMoreIcon: 'this link',\n\t\ttriggerLearnMoreIcon: 'Help',\n\t},\n\talign: 'top',\n\tcontent: <span>Tooltip</span>,\n\tlabels: {\n\t\tlearnMoreAfter: 'to learn more.',\n\t\tlearnMoreBefore: 'Click',\n\t},\n\thoverCloseDelay: 50,\n\tposition: 'absolute',\n\ttheme: 'info',\n\tvariant: 'base',\n};\n\n/**\n * The PopoverTooltip component is variant of the Lightning Design System Popover component. This component wraps an element that triggers it to open. It must be a focusable child element (either a button or an anchor), so that keyboard users can navigate to it.\n */\nclass Tooltip extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisClosing: false,\n\t\t\tisOpen: false,\n\t\t};\n\t}\n\n\tcomponentWillMount() {\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(POPOVER_TOOLTIP, this.props, componentDoc);\n\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.isUnmounting = true;\n\t}\n\n\tgetContent() {\n\t\tlet children;\n\t\tconst noChildrenProvided = React.Children.count(this.props.children) === 0;\n\n\t\tif (noChildrenProvided && this.props.onClickTrigger) {\n\t\t\tchildren = [\n\t\t\t\t<a href=\"javascript:void(0)\" onClick={this.props.onClickTrigger}>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\tname=\"info\"\n\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\tlabel: this.props.assistiveText.triggerLearnMoreIcon,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsize=\"x-small\"\n\t\t\t\t\t/>\n\t\t\t\t</a>,\n\t\t\t];\n\t\t} else if (noChildrenProvided) {\n\t\t\tchildren = [\n\t\t\t\t<Button\n\t\t\t\t\taria-disabled\n\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\ticon: this.props.assistiveText.triggerLearnMoreIcon,\n\t\t\t\t\t}}\n\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\ticonName=\"info\"\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t/>,\n\t\t\t];\n\t\t} else {\n\t\t\tchildren = this.props.children;\n\t\t}\n\n\t\treturn React.Children.map(children, (child, i) =>\n\t\t\tReact.cloneElement(child, {\n\t\t\t\tkey: i, // eslint-disable-line react/no-array-index-key\n\t\t\t\t'aria-describedby': this.getId(),\n\t\t\t\tonBlur: this.handleMouseLeave,\n\t\t\t\tonFocus: this.handleMouseEnter,\n\t\t\t\tonMouseEnter: this.handleMouseEnter,\n\t\t\t\tonMouseLeave: this.handleMouseLeave,\n\t\t\t})\n\t\t);\n\t}\n\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\tgetTooltip() {\n\t\tconst isOpen =\n\t\t\tthis.props.isOpen === undefined ? this.state.isOpen : this.props.isOpen;\n\t\tconst align = this.props.align;\n\n\t\t// REMOVE AT NEXT BREAKING CHANGE (v1.0 or v0.9)\n\t\tconst deprecatedWay = this.props.variant === 'error';\n\n\t\treturn isOpen ? (\n\t\t\t<Dialog\n\t\t\t\tcloseOnTabKey\n\t\t\t\thasNubbin\n\t\t\t\tcontentsClassName={classNames(\n\t\t\t\t\t'slds-popover',\n\t\t\t\t\t'slds-popover_tooltip',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-theme_error': this.props.theme === 'error' || deprecatedWay,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.dialogClassName\n\t\t\t\t)}\n\t\t\t\talign={align}\n\t\t\t\tcontext={this.context}\n\t\t\t\thasStaticAlignment={this.props.hasStaticAlignment}\n\t\t\t\tonClose={this.handleCancel}\n\t\t\t\tonRequestTargetElement={() => this.getTooltipTarget()}\n\t\t\t\tposition={this.props.position}\n\t\t\t\tvariant=\"tooltip\"\n\t\t\t\tcontainerProps={{\n\t\t\t\t\tid: this.getId(),\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.getTooltipContent()}\n\t\t\t</Dialog>\n\t\t) : (\n\t\t\t<span />\n\t\t);\n\t}\n\n\tgetTooltipContent() {\n\t\treturn (\n\t\t\t<div className=\"slds-popover__body\">\n\t\t\t\t{this.props.content}\n\t\t\t\t{this.props.variant === 'learnMore' && this.props.onClickTrigger ? (\n\t\t\t\t\t<div className=\"slds-m-top_x-small\" aria-hidden=\"true\">\n\t\t\t\t\t\t{this.props.labels.learnMoreBefore}{' '}\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\tlabel: this.props.assistiveText.tooltipTipLearnMoreIcon,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\tinverse\n\t\t\t\t\t\t\tname=\"info\"\n\t\t\t\t\t\t\tsize=\"x-small\"\n\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t{this.props.labels.learnMoreAfter}{' '}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetTooltipTarget() {\n\t\treturn this.props.target ? this.props.target : this.trigger;\n\t}\n\n\thandleCancel = () => {\n\t\tthis.setState({\n\t\t\tisOpen: false,\n\t\t\tisClosing: false,\n\t\t});\n\t};\n\n\thandleMouseEnter = () => {\n\t\tthis.setState({\n\t\t\tisOpen: true,\n\t\t\tisClosing: false,\n\t\t});\n\t};\n\n\thandleMouseLeave = () => {\n\t\tthis.setState({ isClosing: true });\n\n\t\tsetTimeout(() => {\n\t\t\tif (!this.isUnmounting && this.state.isClosing) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisOpen: false,\n\t\t\t\t\tisClosing: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.props.hoverCloseDelay);\n\t};\n\n\tsaveTriggerRef = (component) => {\n\t\tthis.trigger = component;\n\t\t// yes, this is a re-render triggered by a render.\n\t\t// Dialog/Popper.js cannot place the popover until\n\t\t// the trigger/target DOM node is mounted. This\n\t\t// way `findDOMNode` is not called and parent\n\t\t// DOM nodes are not queried.\n\t\tif (!this.state.triggerRendered) {\n\t\t\tthis.setState({ triggerRendered: true });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst containerStyles = {\n\t\t\tdisplay: 'inline-block',\n\t\t\t...this.props.triggerStyle,\n\t\t};\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-tooltip-trigger',\n\t\t\t\t\tthis.props.triggerClassName\n\t\t\t\t)}\n\t\t\t\tstyle={containerStyles}\n\t\t\t\tref={this.saveTriggerRef}\n\t\t\t>\n\t\t\t\t{this.getContent()}\n\t\t\t\t{this.getTooltip()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTooltip.contextTypes = {\n\ticonPath: PropTypes.string,\n};\n\nTooltip.displayName = displayName;\nTooltip.propTypes = propTypes;\nTooltip.defaultProps = defaultProps;\n\nexport default Tooltip;\n"],"file":"index.js"}