{"version":3,"sources":["../../../../.tmp-es/components/tree/__docs__/storybook-stories.jsx"],"names":["React","PropTypes","storiesOf","action","normalize","schema","IconSettings","TREE","sampleNodesDynamicHashMap","Tree","Search","DefaultExample","module","addDecorator","getStory","add","base","initialExpandedSelected","label","height","overflowY","large"],"mappings":"AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,WAAlC;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,IAAT,QAAqB,8BAArB;AACA,OAAOC,yBAAP,MAAsC,mBAAtC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B,C,CAEA;AACA;AACA;AACA;;AAEAT,SAAS,CAACK,IAAD,EAAOK,MAAP,CAAT,CACEC,YADF,CACe,UAACC,QAAD;AAAA,SACb;AAAK,IAAA,SAAS,EAAC;AAAf,KAAuCA,QAAQ,EAA/C,CADa;AAAA,CADf,EAIEC,GAJF,CAIM,MAJN,EAIc;AAAA,SACZ,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEP,yBAAyB,CAACQ,IAAjD;AAAuD,IAAA,MAAM,EAAEb;AAA/D,IADY;AAAA,CAJd,EAOEY,GAPF,CAOM,mBAPN,EAO2B;AAAA,SACzB,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEZ,MAAxB;AAAgC,IAAA,cAAc;AAA9C,IADyB;AAAA,CAP3B,EAUEY,GAVF,CAUM,2BAVN,EAUmC;AAAA,SACjC,oBAAC,cAAD;AACC,IAAA,MAAM,EAAEZ,MADT;AAEC,IAAA,KAAK,EAAEK,yBAAyB,CAACS;AAFlC,IADiC;AAAA,CAVnC,EAgBEF,GAhBF,CAgBM,kBAhBN,EAgB0B;AAAA,SACxB,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEZ,MAAxB;AAAgC,IAAA,iBAAiB;AAAjD,IADwB;AAAA,CAhB1B,EAmBEY,GAnBF,CAmBM,oBAnBN,EAmB4B;AAAA,SAC1B,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEZ,MAAxB;AAAgC,IAAA,iBAAiB;AAAjD,IAD0B;AAAA,CAnB5B,EAsBEY,GAtBF,CAsBM,mBAtBN,EAsB2B;AAAA,SACzB,oBAAC,cAAD;AACC,IAAA,MAAM,EAAEZ,MADT;AAEC,IAAA,SAAS,MAFV;AAGC,IAAA,aAAa,EAAE;AAAEe,MAAAA,KAAK,EAAE;AAAT;AAHhB,IADyB;AAAA,CAtB3B,EA6BEH,GA7BF,CA6BM,iBA7BN,EA6ByB;AAAA,SACvB,oBAAC,cAAD;AACC,IAAA,MAAM,EAAEZ,MADT;AAEC,IAAA,SAAS,EAAE;AACVgB,MAAAA,MAAM,EAAE,OADE;AAEVC,MAAAA,SAAS,EAAE;AAFD,KAFZ;AAMC,IAAA,KAAK,EAAEZ,yBAAyB,CAACa;AANlC,IADuB;AAAA,CA7BzB,EAuCEN,GAvCF,CAuCM,6BAvCN,EAuCqC;AAAA,SACnC,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEZ,MAAxB;AAAgC,IAAA,KAAK,EAAEK,yBAAyB,CAACa;AAAjE,IADmC;AAAA,CAvCrC,EA0CEN,GA1CF,CA0CM,oBA1CN,EA0C4B;AAAA,SAC1B,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEZ,MAAxB;AAAgC,IAAA,UAAU;AAA1C,IAD0B;AAAA,CA1C5B","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport { normalize, schema } from 'normalizr';\n\nimport IconSettings from '../../icon-settings';\nimport { TREE } from '../../../utilities/constants';\nimport sampleNodesDynamicHashMap from './dynamic-hashmap';\n\nimport Tree from '../../tree';\nimport Search from '../../input/search';\n\nimport DefaultExample from '../__examples__/default';\n\n// View the generated hash map\n// console.log(JSON.stringify(sampleNodesDynamicHashMap.base));\n// console.log(JSON.stringify(sampleNodesDynamicHashMap.initialExpandedSelected));\n// console.log(JSON.stringify(sampleNodesDynamicHashMap.large));\n\nstoriesOf(TREE, module)\n\t.addDecorator((getStory) => (\n\t\t<div className=\"slds-p-around_medium\">{getStory()}</div>\n\t))\n\t.add('Base', () => (\n\t\t<DefaultExample nodes={sampleNodesDynamicHashMap.base} action={action} />\n\t))\n\t.add('Base with stencil', () => (\n\t\t<DefaultExample action={action} loadingStencil />\n\t))\n\t.add('Initial Expanded/Selected', () => (\n\t\t<DefaultExample\n\t\t\taction={action}\n\t\t\tnodes={sampleNodesDynamicHashMap.initialExpandedSelected}\n\t\t/>\n\t))\n\t.add('No Branch Select', () => (\n\t\t<DefaultExample action={action} noBranchSelection />\n\t))\n\t.add('Multiple Selection', () => (\n\t\t<DefaultExample action={action} multipleSelection />\n\t))\n\t.add('Assistive Heading', () => (\n\t\t<DefaultExample\n\t\t\taction={action}\n\t\t\tnoHeading\n\t\t\tassistiveText={{ label: 'Miscellaneous Foods' }}\n\t\t/>\n\t))\n\t.add('Overflow Hidden', () => (\n\t\t<DefaultExample\n\t\t\taction={action}\n\t\t\tlistStyle={{\n\t\t\t\theight: '300px',\n\t\t\t\toverflowY: 'auto',\n\t\t\t}}\n\t\t\tnodes={sampleNodesDynamicHashMap.large}\n\t\t/>\n\t))\n\t.add('Large dataset (300+) NoTest', () => (\n\t\t<DefaultExample action={action} nodes={sampleNodesDynamicHashMap.large} />\n\t))\n\t.add('Highlighted Search', () => (\n\t\t<DefaultExample action={action} searchable />\n\t));\n"],"file":"storybook-stories.js"}